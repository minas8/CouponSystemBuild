{"version":3,"sources":["reportWebVitals.ts","Components/LayoutArea/Footer/Footer.tsx","Redux/AuthState.ts","Redux/CompaniesState.ts","Redux/CouponsState.ts","Redux/CustomersState.ts","Redux/Store.ts","Components/AuthArea/AuthMenu/AuthMenu.tsx","Components/LayoutArea/Header/Header.tsx","Models/UserType.ts","Components/LayoutArea/Menu/Menu.tsx","Components/AboutArea/AboutUs/AboutUs.tsx","Services/Notification.ts","Components/AuthArea/AdminRequired/AdminRequired.tsx","Components/AuthArea/CompanyRequired/CompanyRequired.tsx","Components/AuthArea/CustomerRequired/CustomerRequired.tsx","Services/Globals.ts","Components/AuthArea/Login/Login.tsx","Components/AuthArea/Logout/Logout.tsx","Services/jwtAxios.ts","Components/CompaniesArea/AddCompany/AddCompany.tsx","Components/CompaniesArea/CompanyDetails/CompanyDetails.tsx","Components/SharedArea/SimpleDialog/SimpleDialog.tsx","Components/CompaniesArea/CompanyCard/CompanyCard.tsx","Components/CompaniesArea/CompanyList/CompanyList.tsx","Components/CompaniesArea/MyCompanyDetails/MyCompanyDetails.tsx","Components/CompaniesArea/UpdateCompany/UpdateCompany.tsx","Components/ContactUsArea/ContactUs/ContactUs.tsx","Models/CategoryType.ts","Services/Util.ts","Components/CouponsArea/AddCoupon/AddCoupon.tsx","Components/CouponsArea/CouponCard/CouponCard.tsx","Components/CouponsArea/CompanyCouponList/CompanyCouponList.tsx","Components/CouponsArea/CouponDetails/CouponDetails.tsx","Components/CouponsArea/CustomerCouponList/CustomerCouponList.tsx","Components/CouponsArea/UpdateCoupon/UpdateCoupon.tsx","Components/CustomersArea/AddCustomer/AddCustomer.tsx","Components/CustomersArea/CustomerDetails/CustomerDetails.tsx","Components/CustomersArea/CustomerCard/CustomerCard.tsx","Components/CustomersArea/CustomerList/CustomerList.tsx","Components/CustomersArea/MyCustomerDetails/MyCustomerDetails.tsx","Components/CustomersArea/UpdateCustomer/UpdateCustomer.tsx","Components/HomeArea/SiteInfo/SiteInfo.tsx","Components/HomeArea/Home/Home.tsx","Components/SharedArea/Page404/Page404.tsx","Components/LayoutArea/Routing/Routing.tsx","Components/LayoutArea/Layout/Layout.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","AuthActionType","className","AuthState","user","storedUser","JSON","parse","localStorage","getItem","this","loginAction","type","Login","payload","CompaniesActionType","CompaniesState","companies","companyAddedAction","company","CompanyAdded","companyUpdatedAction","CompanyUpdated","CouponsActionType","CouponsState","coupons","couponsDownloadedAction","CouponsDownloaded","couponAddedAction","coupon","CouponAdded","couponUpdatedAction","CouponUpdated","CustomersActionType","CustomersState","customers","customerAddedAction","customer","CustomerAdded","customerUpdatedAction","CustomerUpdated","reducers","combineReducers","authState","currentState","action","newState","setItem","stringify","Logout","removeItem","companiesState","CompaniesDownloaded","push","map","c","id","CompanyDeleted","slice","idxDel","findIndex","splice","customersState","CustomersDownloaded","CustomerDeleted","couponsState","CouponDeleted","store","createStore","AuthMenu","props","unsubscribe","state","getState","subscribe","setState","name","to","Component","Header","UserType","Menu","unsubscribeMenu","exact","userType","ADMIN","COMPANY","CUSTOMER","AboutUs","Typography","variant","Face","href","target","rel","title","GitHub","LinkedIn","notify","notification","Notyf","duration","position","x","y","types","background","dismissible","message","success","err","extractMessage","error","response","data","status","Array","isArray","AdminRequired","ComposedComponent","unsubscribeAdminAuthenticated","history","CompanyRequired","unsubscribeCompanyAuthenticated","CustomerRequired","unsubscribeCustomerAuthenticated","Globals","dialogTitles","deleteItem","globals","serverName","uriHead","uriHeadApi","urls","admin","details","couponsByCategory","couponsByMaxPrice","purchaseCoupon","couponsCanPurchase","couponsAboutToExpire","images","login","useHistory","useForm","mode","register","handleSubmit","formState","errors","isValid","useState","showPassword","setShowPassword","setUserType","credentials","a","axios","post","dispatch","LockOpen","onSubmit","TextField","label","required","value","pattern","email","helperText","minLength","InputProps","endAdornment","InputAdornment","IconButton","aria-label","onClick","edge","Visibility","VisibilityOff","password","select","defaultValue","onChange","event","SelectProps","native","Object","values","val","ButtonGroup","Button","startIcon","Send","disabled","useEffect","jwtAxios","create","interceptors","request","use","headers","token","AddCompany","AddBox","ClearAll","CompanyDetails","isAlive","match","params","find","get","useStyles","makeStyles","theme","dialogWrapper","padding","spacing","secondary","color","border","backgroundColor","primary","SimpleDialog","open","selectedValue","onClose","classes","handleButtonClick","Dialog","paper","DialogTitle","component","DialogActions","root","DeleteOutlined","CancelOutlined","CompanyCard","setOpen","setSelectedValue","handleDelete","delete","Edit","Delete","CompanyList","unsubscribeCompanyList","length","MyCompanyDetails","setCompany","setIsAlive","getCompany","UpdateCompany","setValue","useParams","companyInitial","handleChange","isCompanyDifferent","put","companyBefore","isDiff","entries","forEach","afterEntry","beforeEntry","bEntry","toString","inputProps","Checkbox","filter","ContactUs","CategoryType","MailOutline","multiline","rows","FormControlLabel","control","Cancel","util","text","charAt","toLocaleUpperCase","concat","substring","toLocaleLowerCase","date","split","reverse","join","currDate","Date","getMonth","getDate","getFullYear","createStyles","container","display","flexWrap","textField","maxWidth","input","AddCoupon","getValues","category","setCategory","cFormData","FormData","append","description","startDate","endDate","amount","price","imageFile","item","rowsMax","InputLabelProps","shrink","step","min","startadornment","capitalize","validate","cannotBeInThePast","getEndOfDay","now","compareToEndDate","compareToStartDate","FormControl","OutlinedInput","accept","FormHelperText","CouponCard","handlePurchase","detailsURL","image","CardMedia","showPurchase","ShoppingCart","CompanyCouponList","unsubscribeCompanyCouponList","setFilterBy","filterBy","setFilterSelectedValue","filterSelectedValue","handleChangeFilter","toLowerCase","handleChangeMaxPrice","filterVal","includes","getCouponsForDisplay","e","CouponDetails","url","dStart","getDateDisplay","dEnd","src","alt","CustomerCouponList","unsubscribeCustomerCouponList","setListSelectedValue","listSelected","handleChangeList","getCouponList","UpdateCoupon","couponId","couponInitial","isCouponDifferent","myFormData","couponBefore","FileList","AddCustomer","firstName","lastName","CustomerDetails","CustomerCard","CustomerList","unsubscribeCustomerList","MyCustomerDetails","setCustomer","getCustomer","UpdateCustomer","customerInitial","isCustomerDifferent","customerBefore","SiteInfo","Home","Page404","width","height","allow","Routing","path","from","Layout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eccf624b.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./Footer.css\";\n\nfunction Footer(): JSX.Element {\n    return (\n        <div className=\"Footer\">\n\t\t\t<p>All Rights Reserved &copy; Mina Shtraicher</p>\n        </div>\n    );\n}\n\nexport default Footer;","import UserModel from \"../Models/UserModel\";\r\n\r\n// Auth state:\r\nexport class AuthState {\r\n    public user: UserModel = null;\r\n    public constructor() {\r\n        const storedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n        \r\n        if(storedUser) {\r\n            this.user = storedUser;\r\n        }\r\n    }\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Auth Action Types:\r\nexport enum AuthActionType {\r\n    Login = \"Login\",\r\n    Logout = \"Logout\"\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Auth Action:\r\nexport interface AuthAction {\r\n    type: AuthActionType,\r\n    payload?: any; // optional - payload is NOT needed for Logout...\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Auth Action Creators:\r\nexport function loginAction(user: UserModel): AuthAction {\r\n    return { type: AuthActionType.Login, payload: user };\r\n}\r\n\r\nexport function logoutAction(): AuthAction {\r\n    return { type: AuthActionType.Logout };\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Auth Reducer:\r\nexport function authReducer(currentState: AuthState = new AuthState(), action: AuthAction): AuthState {\r\n    const newState = {...currentState};\r\n\r\n    switch (action.type) {\r\n        case AuthActionType.Login: // payload is the logged in user sent from the server\r\n            newState.user = action.payload;\r\n            localStorage.setItem(\"user\", JSON.stringify(newState.user)); // save in localStorage\r\n            break;\r\n        case AuthActionType.Logout: // no payload required!        \r\n            newState.user = null;\r\n            localStorage.removeItem(\"user\"); // remove from localStorage\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}","import CompanyModel from \"../Models/CompanyModel\";\r\n\r\n// Companies state:\r\nexport class CompaniesState {\r\n    companies: CompanyModel[] = [];\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Companies Action Types:\r\nexport enum CompaniesActionType {\r\n    CompaniesDownloaded = \"CompaniesDownloaded\",\r\n    CompanyAdded = \"CompanyAdded\",\r\n    CompanyUpdated = \"CompanyUpdated\",\r\n    CompanyDeleted = \"CompanyDeleted\"\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Companies Action:\r\nexport interface CompaniesAction {\r\n    type: CompaniesActionType,\r\n    payload?: any;\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Companies Action Creators:\r\nexport function companiesDownloadedAction(companies: CompanyModel[]): CompaniesAction {\r\n    return { type: CompaniesActionType.CompaniesDownloaded, payload: companies };\r\n}\r\n\r\nexport function companyAddedAction(company: CompanyModel): CompaniesAction {\r\n    return { type: CompaniesActionType.CompanyAdded, payload: company };\r\n}\r\n\r\nexport function companyUpdatedAction(company: CompanyModel): CompaniesAction {\r\n    return { type: CompaniesActionType.CompanyUpdated, payload: company };\r\n}\r\n\r\nexport function companyDeletedAction(id: number): CompaniesAction {\r\n    return { type: CompaniesActionType.CompanyDeleted, payload: id };\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Companies Reducer:\r\nexport function companiesReducer(currentState: CompaniesState = new CompaniesState(), action: CompaniesAction): CompaniesState {\r\n    const newState = {...currentState};\r\n\r\n    switch (action.type) {\r\n        case CompaniesActionType.CompaniesDownloaded:\r\n            newState.companies = action.payload;\r\n            break;\r\n        case CompaniesActionType.CompanyAdded:\r\n            newState.companies.push(action.payload);\r\n            break;\r\n        case CompaniesActionType.CompanyUpdated:\r\n            newState.companies.map(c => {\r\n                if(c.id !== action.payload.id) {\r\n                    // if NOT current updated item - keep it as-is\r\n                    return c;\r\n                }\r\n                // Otherwise - return the updated item\r\n                return {\r\n                    ...c,\r\n                    ...action.payload\r\n                }\r\n            });\r\n            break;\r\n        case CompaniesActionType.CompanyDeleted:\r\n            let companies = newState.companies.slice();\r\n            const idxDel = newState.companies.findIndex(c => c.id === action.payload.id);\r\n            companies.splice(idxDel,1);\r\n            newState.companies = companies;\r\n            break;\r\n    }\r\n    return newState;\r\n}","import CouponModel from \"../Models/CouponModel\";\r\n\r\n// Coupons state:\r\nexport class CouponsState {\r\n    coupons: CouponModel[] = [];\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Coupons Action Types:\r\nexport enum CouponsActionType {\r\n    CouponsDownloaded = \"CouponsDownloaded\",\r\n    CouponAdded = \"CouponAdded\",\r\n    CouponUpdated = \"CouponUpdated\",\r\n    CouponDeleted = \"CouponDeleted\"\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Coupons Action:\r\nexport interface CouponsAction {\r\n    type: CouponsActionType,\r\n    payload?: any;\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Coupons Action Creators:\r\nexport function couponsDownloadedAction(coupons: CouponModel[]): CouponsAction {\r\n    return { type: CouponsActionType.CouponsDownloaded, payload: coupons };\r\n}\r\n\r\nexport function couponAddedAction(coupon: CouponModel): CouponsAction {\r\n    return { type: CouponsActionType.CouponAdded, payload: coupon };\r\n}\r\n\r\nexport function couponUpdatedAction(coupon: CouponModel): CouponsAction {\r\n    return { type: CouponsActionType.CouponUpdated, payload: coupon };\r\n}\r\n\r\nexport function couponDeletedAction(id: number): CouponsAction {\r\n    return { type: CouponsActionType.CouponDeleted, payload: id };\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Coupons Reducer:\r\nexport function couponsReducer(currentState: CouponsState = new CouponsState(), action: CouponsAction): CouponsState {\r\n    const newState = {...currentState};\r\n\r\n    switch (action.type) {\r\n        case CouponsActionType.CouponsDownloaded:\r\n            newState.coupons = action.payload;\r\n            break;\r\n        case CouponsActionType.CouponAdded:\r\n            newState.coupons.push(action.payload);\r\n            break;\r\n        case CouponsActionType.CouponUpdated:\r\n            newState.coupons.map(c => {\r\n                if(c.id !== action.payload.id) {\r\n                    // if NOT current updated item - keep it as-is\r\n                    return c;\r\n                }\r\n                // Otherwise - return the updated item\r\n                return {\r\n                    ...c,\r\n                    ...action.payload\r\n                }\r\n            });\r\n            break;\r\n        case CouponsActionType.CouponDeleted:            \r\n            let coupons = newState.coupons.slice();\r\n            const idxDel = newState.coupons.findIndex(c => c.id === action.payload.id);\r\n            coupons.splice(idxDel,1);\r\n            newState.coupons = coupons;\r\n            break;\r\n    }\r\n    return newState;\r\n}","import CustomerModel from \"../Models/CustomerModel\";\r\n\r\n// Customers state:\r\nexport class CustomersState {\r\n    customers: CustomerModel[] = [];\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Customers Action Types:\r\nexport enum CustomersActionType {\r\n    CustomersDownloaded = \"CustomersDownloaded\",\r\n    CustomerAdded = \"CustomerAdded\",\r\n    CustomerUpdated = \"CustomerUpdated\",\r\n    CustomerDeleted = \"CustomerDeleted\"\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Customers Action:\r\nexport interface CustomersAction {\r\n    type: CustomersActionType,\r\n    payload?: any;\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Customers Action Creators:\r\nexport function customersDownloadedAction(customers: CustomerModel[]): CustomersAction {\r\n    return { type: CustomersActionType.CustomersDownloaded, payload: customers };\r\n}\r\n\r\nexport function customerAddedAction(customer: CustomerModel): CustomersAction {\r\n    return { type: CustomersActionType.CustomerAdded, payload: customer };\r\n}\r\n\r\nexport function customerUpdatedAction(customer: CustomerModel): CustomersAction {\r\n    return { type: CustomersActionType.CustomerUpdated, payload: customer };\r\n}\r\n\r\nexport function customerDeletedAction(id: number): CustomersAction {\r\n    return { type: CustomersActionType.CustomerDeleted, payload: id };\r\n}\r\n\r\n// -------------------------------------------\r\n\r\n// Customers Reducer:\r\nexport function customersReducer(currentState: CustomersState = new CustomersState(), action: CustomersAction): CustomersState {\r\n    const newState = {...currentState};\r\n\r\n    switch (action.type) {\r\n        case CustomersActionType.CustomersDownloaded:\r\n            newState.customers = action.payload;\r\n            break;\r\n        case CustomersActionType.CustomerAdded:\r\n            newState.customers.push(action.payload);\r\n            break;\r\n        case CustomersActionType.CustomerUpdated:\r\n            newState.customers.map(c => {\r\n                if(c.id !== action.payload.id) {\r\n                    // if NOT current updated item - keep it as-is\r\n                    return c;\r\n                }\r\n                // Otherwise - return the updated item\r\n                return {\r\n                    ...c,\r\n                    ...action.payload\r\n                }\r\n            });\r\n            break;\r\n        case CustomersActionType.CustomerDeleted:\r\n            let customers = newState.customers.slice();\r\n            const idxDel = newState.customers.findIndex(c => c.id === action.payload.id);\r\n            customers.splice(idxDel,1);\r\n            newState.customers = customers;\r\n            break;\r\n    }\r\n    return newState;\r\n}","import { combineReducers, createStore } from \"redux\";\r\nimport { authReducer } from \"./AuthState\";\r\nimport { companiesReducer } from './CompaniesState';\r\nimport { couponsReducer } from \"./CouponsState\";\r\nimport { customersReducer } from './CustomersState';\r\n\r\n// Multiple Reducers:\r\nconst reducers = combineReducers({ authState: authReducer, companiesState: companiesReducer, customersState: customersReducer, couponsState: couponsReducer })\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Unsubscribe } from \"redux\";\nimport UserModel from \"../../../Models/UserModel\";\nimport store from \"../../../Redux/Store\";\nimport \"./AuthMenu.css\";\n\ninterface AuthMenuState {\n\tuser: UserModel;\n}\n\nclass AuthMenu extends Component<{}, AuthMenuState> {\n\n    private unsubscribe: Unsubscribe;\n\n    public constructor(props: {}) {\n        super(props);\n        this.state = { user: store.getState().authState.user };\n    }\n\n    public componentDidMount(): void {\n        this.unsubscribe = store.subscribe(() => {\n            this.setState({ user: store.getState().authState.user })\n        });\n    }\n\n    public render(): JSX.Element {\n        const user = this.state.user;\n        return (\n            <div className=\"AuthMenu\">\n\t\t\t\t{\n                    this.state.user && <>\n                        <span>Hello {user.name}</span>\n                        <span> | </span>\n                        <NavLink to=\"/logout\">Logout</NavLink>\n                    </>\n                }\n                {\n                    !this.state.user && <>\n                        <span>Hello Guest</span>\n                        <span> | </span>\n                        <NavLink to=\"/login\">Login</NavLink>\n                    </>\n                }\n            </div>\n        );\n    }\n\n    public componentWillUnmount(): void {\n        this.unsubscribe();\n    }\n}\n\nexport default AuthMenu;","import AuthMenu from \"../../AuthArea/AuthMenu/AuthMenu\";\nimport \"./Header.css\";\n\nfunction Header(): JSX.Element {\n    return (\n        <div className=\"Header\">\n\t\t\t<AuthMenu />\n            <h1><span>C</span>oupon<span>system</span></h1>\n        </div>\n    );\n}\n\nexport default Header;","export enum UserType {\r\n    ADMIN = \"ADMIN\",\r\n    COMPANY = \"COMPANY\",\r\n    CUSTOMER = \"CUSTOMER\"\r\n}","import { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Unsubscribe } from \"redux\";\nimport UserModel from \"../../../Models/UserModel\";\nimport { UserType } from \"../../../Models/UserType\";\nimport store from \"../../../Redux/Store\";\nimport \"./Menu.css\";\n\ninterface MenuState {\n    user: UserModel;\n}\n\nclass Menu extends Component<{}, MenuState> {\n\n    private unsubscribeMenu: Unsubscribe;\n\n    public constructor(props: {}) {\n        super(props);\n        this.state = { user: store.getState().authState.user };\n    }\n\n    public componentDidMount(): void {\n        this.unsubscribeMenu = store.subscribe(() => {\n            this.setState({ user: store.getState().authState.user });\n        });\n    }\n\n    public render(): JSX.Element {\n        const user = this.state.user;\n        return (\n            <div className=\"Menu\">\n                <nav>\n                    <NavLink to=\"/home\" exact>Home</NavLink>\n                    {user?.userType === UserType.ADMIN &&\n                        <>\n                            <NavLink to=\"/companies\" exact>Companies</NavLink>\n                            <NavLink to=\"/customers\" exact>Customers</NavLink>\n                        </>\n                    }\n                    {user?.userType === UserType.COMPANY &&\n                        <>\n                            <NavLink to=\"/company\" exact>My Details</NavLink>\n                            <NavLink to=\"/company/coupons\" exact>My Coupons</NavLink>\n                        </>\n                    }\n                    {user?.userType === UserType.CUSTOMER &&\n                        <>\n                            <NavLink to=\"/customer\" exact>My Details</NavLink>\n                            <NavLink to=\"/customer/coupons\" exact>Coupons</NavLink>\n                        </>\n                    }\n                    <NavLink to=\"/about\" exact>About</NavLink>\n                    <NavLink to=\"/contact-us\" exact>Contact Us</NavLink>\n                </nav>\n            </div>\n        );\n    }\n\n    public componentWillUnmount(): void {\n        this.unsubscribeMenu();\n    }\n}\n\nexport default Menu;","import { Typography } from \"@material-ui/core\";\nimport { Face, GitHub, LinkedIn } from \"@material-ui/icons\";\nimport \"./AboutUs.css\";\n\nfunction AboutUs(): JSX.Element {\n    return (\n        <div className=\"AboutUs\">\n            <Typography variant=\"h4\" className=\"Headline\"> <Face /> About Me</Typography>\n\n            <br />\n            <div className=\"info\">\n                <Typography variant=\"body2\">\n                    My name is Mina Shtraicher.<br />\n                    You can find me here:\n                </Typography>\n                <Typography variant=\"h4\">\n                    <a href=\"https://github.com/minas8\" target=\"_blank\" rel=\"noreferrer\" title=\"My GitHub\">\n                        <GitHub />\n                    </a>\n                    <a href=\"https://www.linkedin.com/in/mina-shtraicher\" target=\"_blank\" rel=\"noreferrer\" title=\"My LinkedIn\">\n                        <LinkedIn />\n                    </a>\n                </Typography>\n\n                <Typography variant=\"overline\" className=\"TextField\">Objective</Typography>\n                <Typography variant=\"body2\">\n                    I have about 10 years of experience as a software engineer (post career change), specializing in C# and familiar with both\n                    client &amp; server side.<br /> I took part in many projects, which required working with various interfaces &amp; team\n                    members.<br /> On March 2020 I was put on a long LOA and decided to invest my time in expanding my technical\n                    skills and focus on new professional areas.<br />\n                    These days I’m actively searching for my next position as a Java Full Stack / Microsoft.Net developer.\n                </Typography>\n                <br />\n\n                <Typography variant=\"overline\" className=\"TextField\">Professional Experience</Typography>\n                <br />\n                <Typography variant=\"caption\" className=\"TextField\">2011 – 2020 Software developer, One1 (Advantech)</Typography>\n                <ul>\n                    <li>Develop &amp; implement ClickSoftware solutions based on client’s requirements</li>\n                    <li>Build Web Services / WCF solutions, using .NET technology &amp; developing in C#</li>\n                    <li>Implementing MSP (My Single Point) in JavaScript</li>\n                    <li>Using diverse technologies on a daily basis: C#, WinForms, MSSQL, Web Services, XML, Javascript, jQuery, HTML,CSS</li>\n                    <li>Response on bids</li>\n                    <li>Working on diverse projects which required much self learning, for example the Services of Google maps api and implementing stand-alone development for clients</li>\n                    <li>Working in a team of 3 while collaborating, knowledge sharing &amp; training new employees</li>\n                    <li>Selected for outstanding employee – 2017</li>\n                </ul>\n\n                <Typography variant=\"caption\" className=\"TextField\">2011 Software developer, Find Me An Angel (FMAA) inc</Typography>\n                <ul>\n                    <li>Developing a complex social website</li>\n                    <li>Building a web product, while using ASP.NET Web Forms</li>\n                    <li>Developing in .Net, C# and working with MSSQL database</li>\n                </ul>\n            </div><br /><br />\n        </div>\n    );\n}\n\nexport default AboutUs;\n","import { Notyf } from \"notyf\";\r\n\r\nclass Notify {\r\n\r\n    private notification = new Notyf({ \r\n        duration: 4000, \r\n        position: { x: \"right\", y: \"bottom\" },\r\n        types: [\r\n            {\r\n              type: 'success',\r\n              background: '#8d8d8d',\r\n              dismissible: true\r\n            },\r\n            {\r\n              type: 'error',\r\n              background: '#ff4c2c',\r\n              dismissible: true\r\n            }\r\n          ]\r\n    })\r\n\r\n    public success(message: string) {\r\n        this.notification.success(message);\r\n    }\r\n    \r\n    public error(err: any) {\r\n        const message: string = this.extractMessage(err);\r\n        this.notification.error(message);\r\n    }\r\n\r\n    private extractMessage(err: any): string {\r\n\r\n        if(typeof err === \"string\") {\r\n            return err;\r\n        }\r\n        \r\n        if(typeof err?.response?.data === \"string\") {\r\n            return err.response.data;\r\n        }\r\n\r\n        if (typeof err?.response?.data?.message === \"string\") {\r\n            if(err.response.status === 401) {\r\n                return \"You are not authorized, you need to login again\";\r\n            }\r\n            return err.response.data;\r\n        }\r\n\r\n        if(Array.isArray(err?.response?.data)) {\r\n            return err.response.data[0];\r\n        }\r\n        \r\n        if(typeof err?.message === \"string\") {\r\n            return err.message;\r\n        }\r\n\r\n        return \"An error occurred, please try again.\";\r\n    }\r\n}\r\n\r\nconst notify = new Notify();\r\n\r\nexport default notify;","import { History } from \"history\";\nimport { Component } from \"react\";\nimport { Unsubscribe } from \"redux\";\nimport UserModel from \"../../../Models/UserModel\";\nimport { UserType } from \"../../../Models/UserType\";\nimport store from \"../../../Redux/Store\";\nimport notify from \"../../../Services/Notification\";\n\n// This function receives the Component that only admin user should access\nfunction AdminRequired(ComposedComponent: any) {\n\n    interface AdminAuthenticatedState {\n        user: UserModel;\n    }\n\n    interface AdminAuthenticatedProps {\n        history: History;\n    }\n\n    class AdminAuthenticated extends Component<AdminAuthenticatedProps, AdminAuthenticatedState> {\n\n        private unsubscribeAdminAuthenticated: Unsubscribe;\n\n        public constructor(props: AdminAuthenticatedProps) {\n            super(props);\n            this.state = { user: store.getState().authState.user };\n        }\n\n        componentWillMount() {\n            this.unsubscribeAdminAuthenticated = store.subscribe(() => {\n                this.setState({ user: store.getState().authState.user });\n            });\n\n            if (!this.state.user || this.state.user.userType !== UserType.ADMIN) {\n                notify.error(\"You are not authorized to access this action!\");\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />;\n        }\n\n        public componentWillUnmount(): void {\n            this.unsubscribeAdminAuthenticated();\n        }\n    }\n\n    // Return the new Component that requires authorization\n    return AdminAuthenticated;\n}\n\nexport default AdminRequired;","import { History } from \"history\";\nimport { Component } from \"react\";\nimport { Unsubscribe } from \"redux\";\nimport UserModel from \"../../../Models/UserModel\";\nimport { UserType } from \"../../../Models/UserType\";\nimport store from \"../../../Redux/Store\";\nimport notify from \"../../../Services/Notification\";\n\n// This function receives the Component that only company user should access\nfunction CompanyRequired(ComposedComponent: any) {\n\n    interface CompanyAuthenticatedState {\n        user: UserModel;\n    }\n\n    interface CompanyAuthenticatedProps {\n        history: History;\n    }\n\n    class CompanyAuthenticated extends Component<CompanyAuthenticatedProps, CompanyAuthenticatedState> {\n\n        private unsubscribeCompanyAuthenticated: Unsubscribe;\n\n        public constructor(props: CompanyAuthenticatedProps) {\n            super(props);\n            this.state = { user: store.getState().authState.user };\n        }\n\n        componentWillMount() {\n            this.unsubscribeCompanyAuthenticated = store.subscribe(() => {\n                this.setState({ user: store.getState().authState.user });\n            });\n\n            if (!this.state.user || this.state.user.userType !== UserType.COMPANY) {\n                notify.error(\"You are not authorized to access this action!\");\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />;\n        }\n\n        public componentWillUnmount(): void {\n            this.unsubscribeCompanyAuthenticated();\n        }\n    }\n\n    // Return the new Component that requires authorization\n    return CompanyAuthenticated;\n}\n\nexport default CompanyRequired;","import { History } from \"history\";\nimport { Component } from \"react\";\nimport { Unsubscribe } from \"redux\";\nimport UserModel from \"../../../Models/UserModel\";\nimport { UserType } from \"../../../Models/UserType\";\nimport store from \"../../../Redux/Store\";\nimport notify from \"../../../Services/Notification\";\n\n// This function receives the Component that only customer user should access\nfunction CustomerRequired(ComposedComponent: any) {\n\n    interface CustomerAuthenticatedState {\n        user: UserModel;\n    }\n\n    interface CustomerAuthenticatedProps {\n        history: History;\n    }\n\n    class CustomerAuthenticated extends Component<CustomerAuthenticatedProps, CustomerAuthenticatedState> {\n\n        private unsubscribeCustomerAuthenticated: Unsubscribe;\n\n        public constructor(props: CustomerAuthenticatedProps) {\n            super(props);\n            this.state = { user: store.getState().authState.user };\n        }\n\n        componentWillMount() {\n            this.unsubscribeCustomerAuthenticated = store.subscribe(() => {\n                this.setState({ user: store.getState().authState.user });\n            });\n\n            if (!this.state.user || this.state.user.userType !== UserType.CUSTOMER) {\n                notify.error(\"You are not authorized to access this action!\");\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        render() {\n            return <ComposedComponent {...this.props} />;\n        }\n\n        public componentWillUnmount(): void {\n            this.unsubscribeCustomerAuthenticated();\n        }\n    }\n\n    // Return the new Component that requires authorization\n    return CustomerAuthenticated;\n}\n\nexport default CustomerRequired;","// Global settings\r\nclass Globals {\r\n    public dialogTitles = {\r\n        deleteItem: \"Are you sure you want to delete\"\r\n    };\r\n}\r\n\r\n// DEV Settings\r\nclass DevelopmentGlobals extends Globals {\r\n    private serverName = \"localhost\";\r\n    private serverPort = \"8080\";\r\n    private uriHead = `http://${this.serverName}:${this.serverPort}`;\r\n    private uriHeadApi = `http://${this.serverName}:${this.serverPort}/api`;\r\n    public urls = {\r\n        admin: {\r\n            companies: `${this.uriHeadApi}/u-admin/companies/`,\r\n            company: `${this.uriHeadApi}/u-admin/company/`,\r\n            customers: `${this.uriHeadApi}/u-admin/customers/`,\r\n            customer: `${this.uriHeadApi}/u-admin/customer/`\r\n        },\r\n        company: {\r\n            details: `${this.uriHeadApi}/u-company`,\r\n            coupon: `${this.uriHeadApi}/u-company/coupon/`,\r\n            coupons: `${this.uriHeadApi}/u-company/coupons/`,\r\n            couponsByCategory: `${this.uriHeadApi}/u-company/coupons-by-category/`,\r\n            couponsByMaxPrice: `${this.uriHeadApi}/u-company/coupons-up-to-price/`\r\n        },\r\n        customer: {\r\n            details: `${this.uriHeadApi}/u-customer`,\r\n            coupon: `${this.uriHeadApi}/u-customer/coupon/`,\r\n            purchaseCoupon: `${this.uriHeadApi}/u-customer/coupon/`,\r\n            coupons: `${this.uriHeadApi}/u-customer/coupons/`,\r\n            couponsByCategory: `${this.uriHeadApi}/u-customer/coupons-by-category/`,\r\n            couponsByMaxPrice: `${this.uriHeadApi}/u-customer/coupons-up-to-price/`,\r\n            couponsCanPurchase: `${this.uriHeadApi}/u-customer/coupons-can-purchase/`,\r\n            couponsAboutToExpire: `${this.uriHeadApi}/u-customer/coupons-about-to-expire/`\r\n        },\r\n        images: `${this.uriHead}/images/`,\r\n        login: `${this.uriHead}/auth/login`\r\n    }\r\n}\r\n\r\n// Prod Settings\r\nclass ProductionGlobals extends Globals {\r\n    private serverName = \"https://coupons3-server.herokuapp.com\";\r\n    private uriHead = `${this.serverName}`;\r\n    private uriHeadApi = `${this.serverName}/api`;\r\n    public urls = {\r\n        admin: {\r\n            companies: `${this.uriHeadApi}/u-admin/companies/`,\r\n            company: `${this.uriHeadApi}/u-admin/company/`,\r\n            customers: `${this.uriHeadApi}/u-admin/customers/`,\r\n            customer: `${this.uriHeadApi}/u-admin/customer/`\r\n        },\r\n        company: {\r\n            details: `${this.uriHeadApi}/u-company`,\r\n            coupon: `${this.uriHeadApi}/u-company/coupon/`,\r\n            coupons: `${this.uriHeadApi}/u-company/coupons/`,\r\n            couponsByCategory: `${this.uriHeadApi}/u-company/coupons-by-category/`,\r\n            couponsByMaxPrice: `${this.uriHeadApi}/u-company/coupons-up-to-price/`\r\n        },\r\n        customer: {\r\n            details: `${this.uriHeadApi}/u-customer`,\r\n            coupon: `${this.uriHeadApi}/u-customer/coupon/`,\r\n            purchaseCoupon: `${this.uriHeadApi}/u-customer/coupon/`,\r\n            coupons: `${this.uriHeadApi}/u-customer/coupons/`,\r\n            couponsByCategory: `${this.uriHeadApi}/u-customer/coupons-by-category/`,\r\n            couponsByMaxPrice: `${this.uriHeadApi}/u-customer/coupons-up-to-price/`,\r\n            couponsCanPurchase: `${this.uriHeadApi}/u-customer/coupons-can-purchase/`,\r\n            couponsAboutToExpire: `${this.uriHeadApi}/u-customer/coupons-about-to-expire/`\r\n        },\r\n        images: `${this.uriHead}/images/`,\r\n        login: `${this.uriHead}/auth/login`\r\n    }\r\n}\r\n\r\nconst globals = process.env.NODE_ENV === \"development\" ? new DevelopmentGlobals() : new ProductionGlobals();\r\n\r\nexport default globals;","import { Button, ButtonGroup, IconButton, InputAdornment, TextField, Typography } from \"@material-ui/core\";\nimport { LockOpen, Send, Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { ChangeEvent, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport CredentialsModel from \"../../../Models/CredentialsModel\";\nimport UserModel from \"../../../Models/UserModel\";\nimport { UserType } from \"../../../Models/UserType\";\nimport { loginAction } from \"../../../Redux/AuthState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport notify from \"../../../Services/Notification\";\nimport \"./Login.css\";\n\nfunction Login(): JSX.Element {\n\n    const history = useHistory();\n    const { register, handleSubmit, formState: { errors, isValid } } = useForm<CredentialsModel>({\n        mode: \"all\"\n    });\n    const [showPassword, setShowPassword] = useState(false);\n    const [userType, setUserType] = useState(\"ChooseOne\");\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setUserType(event.target.value);\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    async function send(credentials: CredentialsModel) {\n        try {\n            const response = await axios.post<UserModel>(globals.urls.login, credentials);\n            store.dispatch(loginAction(response.data));\n            notify.success(\"You have been successfully logged in!\")\n            history.push(\"/home\");\n        } catch (err) {\n            notify.error(err);\n        }\n    }\n\n    return (\n        <div className=\"Login\">\n            <Typography variant=\"h4\" className=\"Headline\"> <LockOpen /> Login</Typography>\n\n            <form onSubmit={handleSubmit(send)}>\n                <TextField label=\"Email\" variant=\"outlined\" className=\"mui-input\"\n                    type=\"email\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"Missing email.\" },\n                        pattern: { value: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/, message: \"Email is not valid.\" }\n                    })}\n                    error={!!errors.email}\n                    helperText={errors.email?.message}\n                /><br /><br />\n\n                <TextField label=\"Password\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"password\", {\n                        required: { value: true, message: \"Missing password.\" },\n                        minLength: { value: 4, message: \"Password too short, should be at least 4 characters.\" },\n                        pattern: { value: /^[a-zA-Z0-9]+$/gi, message: \"Use only the following characters: [a-zA-Z0-9].\" }\n                    })}\n                    type={showPassword ? 'text' : 'password'}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword} edge=\"end\">\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>,\n                    }}\n                    error={!!errors.password}\n                    helperText={errors.password?.message}\n                /><br /><br />\n\n                <TextField name=\"userType\" select className=\"mui-input\"\n                    label=\"Please select your user type\" variant=\"outlined\"\n                    defaultValue={userType}\n                    onChange={handleChange}\n                    SelectProps={{ native: true }}\n                    {...register('userType', {\n                        required: { value: true, message: \"User type is required.\" },\n                        pattern: { value: /^((?!ChooseOne).)*$/, message: \"Choose one of the options other than the first one.\" }\n                    })}\n                    error={!!errors.userType}\n                    helperText={errors.userType?.message}\n                >\n                    <option value=\"ChooseOne\">Choose</option>\n                    {Object.values(UserType).map(val =>\n                        <option key={val} value={val}>{val}</option>\n                    )}\n                </TextField><br /><br />\n\n                <ButtonGroup variant=\"contained\">\n                    <Button className=\"login\" startIcon={<Send />}\n                        type=\"submit\" disabled={!isValid}>Login</Button>\n                </ButtonGroup>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { logoutAction } from \"../../../Redux/AuthState\";\nimport store from \"../../../Redux/Store\";\nimport notify from \"../../../Services/Notification\";\n\nfunction Logout(): JSX.Element {\n\n    const history = useHistory();\n    const clearStore = () => {\n        store.getState().companiesState.companies = [];\n        store.getState().customersState.customers = [];\n        store.getState().couponsState.coupons = [];\n    }\n\n    useEffect(() => {\n        store.dispatch(logoutAction());\n        clearStore();\n        notify.success(\"You are now logged out.\");\n        history.push(\"/home\");\n    });\n\n    return null;\n}\n\nexport default Logout;\n\n","import axios from \"axios\";\r\nimport store from \"../Redux/Store\";\r\n\r\nconst jwtAxios = axios.create();\r\n\r\n// Request interceptor\r\njwtAxios.interceptors.request.use(request => {\r\n    request.headers = {\r\n        \"token\": store.getState().authState.user?.token\r\n    }\r\n    \r\n    return request;\r\n});\r\n\r\nexport default jwtAxios;","import { Button, ButtonGroup, IconButton, InputAdornment, TextField, Typography } from \"@material-ui/core\";\nimport { AddBox, ClearAll, Send, Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CompanyModel from \"../../../Models/CompanyModel\";\nimport { companyAddedAction } from \"../../../Redux/CompaniesState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./AddCompany.css\";\n\nfunction AddCompany(): JSX.Element {\n\n    const { register, handleSubmit, formState: { errors } } = useForm<CompanyModel>({\n        mode: \"all\"\n    });\n    const history = useHistory();\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    async function send(company: CompanyModel) {\n        try {\n            const response = await jwtAxios.post<CompanyModel>(globals.urls.admin.company, company);            \n            store.dispatch(companyAddedAction(response.data));\n            notify.success(\"Company has been added!\");\n            history.push(\"/companies\");\n        } catch (err) {\n            notify.error(err);\n            if (err.response.data.status === 401) { // UNAUTHORIZED or Token Expired\n                history.push(\"/logout\");\n            }\n        }\n    }\n\n    return (\n        <div className=\"AddCompany\">\n            <Typography variant=\"h4\" className=\"Headline\"> <AddBox /> Add Company</Typography>\n\n            <form onSubmit={handleSubmit(send)}>\n                <TextField label=\"name\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"name\", {\n                        required: { value: true, message: \"Missing first name.\" },\n                        minLength: { value: 3, message: \"First name too short.\" },\n                        pattern: { value: /[^\\W ]/g, message: \"Use only alphanumeric & underscore characters and space.\" }\n                    })}\n                    error={!!errors.name}\n                    helperText={errors.name?.message}\n                /><br /><br />\n\n                <TextField label=\"Email\" variant=\"outlined\" className=\"mui-input\"\n                    type=\"email\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"Missing email.\" },\n                        pattern: { value: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/, message: \"Email is not valid.\" }\n                    })}\n                    error={!!errors.email}\n                    helperText={errors.email?.message}\n                /><br /><br />\n\n                <TextField label=\"Password\" name=\"password\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"password\", {\n                        required: { value: true, message: \"Missing password.\" },\n                        minLength: { value: 4, message: \"Password too short, should be at least 4 characters.\" },\n                        pattern: { value: /^[a-zA-Z0-9]+$/gi, message: \"Use only the following characters: [a-zA-Z0-9].\" }\n                    })}\n                    type={showPassword ? 'text' : 'password'}\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword} edge=\"end\">\n                                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>,\n                    }}\n                    error={!!errors.password}\n                    helperText={errors.password?.message}\n                /><br /><br />\n\n                <ButtonGroup variant=\"contained\">\n                    <Button className=\"send\" startIcon={<Send />}\n                        type=\"submit\">Add</Button>\n                    <Button className=\"reset\" startIcon={<ClearAll />}\n                        type=\"reset\">Reset</Button>\n                </ButtonGroup>\n            </form>\n        </div>\n    );\n}\n\nexport default AddCompany;","import { History } from \"history\";\nimport { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport CompanyModel from \"../../../Models/CompanyModel\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./CompanyDetails.css\";\n\ninterface RouteParam {\n    id: string;\n}\n\ninterface CompanyDetailsProps extends RouteComponentProps<RouteParam> {\n    history: History;\n}\n\ninterface CompanyDetailsState {\n    company: CompanyModel;\n}\n\nclass CompanyDetails extends Component<CompanyDetailsProps, CompanyDetailsState> {\n\n    // 'isAlive' is to prevent 'setState' if the user is not authorized and is pushed to logout page\n    private isAlive = true;\n\n    public constructor(props: CompanyDetailsProps) {\n        super(props);\n        this.state = { company: null };\n    }\n\n    public async componentDidMount() {\n        try {\n            const id = +this.props.match.params.id;\n            let company = store.getState().companiesState.companies.find(c => c.id === id);\n            if (company) {\n                this.setState({ company });\n            } else if (id > 0) {\n                const response = await jwtAxios.get<CompanyModel>(`${globals.urls.admin.company}/${id}`);\n                if (!this.isAlive) return;\n\n                company = response.data;\n                notify.success(\"Company details were received!\");\n                this.setState({ company });\n            }\n        } catch (err) {\n            notify.error(err);\n            if (err.response.data.status === 401) { // UNAUTHORIZED or Token Expired\n                this.props.history.push(\"/logout\");\n            }\n        }\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"CompanyDetails\">\n                {this.state.company &&\n                    <>\n                        <h2>Company Details</h2>\n                        <h3>Name: {this.state.company.name}</h3>\n                        <h4>Email: {this.state.company.email}</h4>\n                        <h4>Password: {this.state.company.password}</h4>\n                        <br /><br />\n                    </>\n                }\n            </div>\n        );\n    }\n\n    public componentWillUnmount(): void {\n        this.isAlive = false;\n    }\n}\n\nexport default CompanyDetails;","import { Button, Dialog, DialogActions, DialogTitle, makeStyles, Typography } from \"@material-ui/core\";\nimport { CancelOutlined, DeleteOutlined } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    dialogWrapper: {\n        padding: theme.spacing(2)\n    },\n    secondary: {\n        color: '#1a1a1a',\n        border: '2px solid #1a1a1a',\n        backgroundColor: '#dbdbdb',\n        '&:hover': {\n            color: '#dbdbdb',\n            backgroundColor: '#1a1a1a'\n        }\n    },\n    primary: {\n        color: '#e04226',\n        border: '2px solid #e04226',\n        backgroundColor: '#ffede9',\n        '&:hover': { \n            color: '#ffede9',\n            backgroundColor: '#e04226' \n        }\n    }\n}));\n\ninterface SimpleDialogProps {\n    open: boolean;\n\tselectedValue: string;\n    onClose: (value: string) => void;\n    title: string;\n}\n\nfunction SimpleDialog(props: SimpleDialogProps): JSX.Element {\n\n    const {open, selectedValue, onClose, title} = props;\n    const classes = useStyles();\n\n    const handleClose = () => {\n        onClose(selectedValue);\n    };\n\n    const handleButtonClick = (value: string) => {\n        onClose(value);\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose} classes={{ paper: classes.dialogWrapper }}>\n            <DialogTitle>\n                <Typography variant=\"h6\" component=\"div\">\n                    {title}\n                </Typography>\n            </DialogTitle>\n            <DialogActions>\n                <Button classes={{ root: classes.primary }}\n                    startIcon={<DeleteOutlined />} \n                    onClick={() => handleButtonClick(\"delete\")}>\n                        Delete\n                </Button>\n                <Button classes={{ root: classes.secondary }}\n                    startIcon={<CancelOutlined />} \n                    onClick={() => handleButtonClick(\"cancel\")}>\n                        Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default SimpleDialog;","import { Delete, Edit } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport CompanyModel from \"../../../Models/CompanyModel\";\nimport { companyDeletedAction } from \"../../../Redux/CompaniesState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport SimpleDialog from \"../../SharedArea/SimpleDialog/SimpleDialog\";\nimport \"./CompanyCard.css\";\n\ninterface CompanyCardProps {\n    company: CompanyModel;\n}\n\nfunction CompanyCard(props: CompanyCardProps): JSX.Element {\n\n    const company = props.company;\n    const [open, setOpen] = useState(false);\n    const [selectedValue, setSelectedValue] = useState(\"\");\n    const history = useHistory();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    }\n\n    const handleClose = (value: string) => {\n        setOpen(false);\n        setSelectedValue(value);\n        value === \"delete\" && handleDelete();\n    }\n\n    const handleDelete = async () => {\n        try {\n            await jwtAxios.delete(`${globals.urls.admin.company}${company.id}`);\n            store.dispatch(companyDeletedAction(company.id));\n            notify.success(\"Company has been deleted!\");\n        } catch (err) {\n            notify.error(err);\n            if (err.response?.data?.status === 401) { // UNAUTHORIZED or Token Expired\n                history.push(\"/logout\");\n            }\n        }\n    }\n\n    return (\n        <div className=\"CompanyCard\">\n            <NavLink to={`/companies/${company.id}`} title=\"Click for details\">\n                <h4>{company.name}</h4>\n                <span>Email: {company.email}</span>\n            </NavLink><br />\n            <div className=\"buttons\">\n                <NavLink to={`/companies/update/${company.id}`}>\n                    <Edit />\n                </NavLink>\n                <NavLink to=\"#\" onClick={handleClickOpen}>\n                    <Delete />\n                </NavLink>\n            </div>\n\n            <SimpleDialog\n                title={`${globals.dialogTitles.deleteItem} ${company.name}?`}\n                selectedValue={selectedValue}\n                open={open} onClose={handleClose}\n            />\n        </div>\n    );\n}\n\nexport default CompanyCard;","import { AddBox } from \"@material-ui/icons\";\nimport { History } from \"history\";\nimport { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Unsubscribe } from \"redux\";\nimport CompanyModel from \"../../../Models/CompanyModel\";\nimport { companiesDownloadedAction } from \"../../../Redux/CompaniesState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport CompanyCard from \"../CompanyCard/CompanyCard\";\nimport \"./CompanyList.css\";\n\ninterface CompanyListState {\n    companies: CompanyModel[];\n}\n\ninterface CompanyListProps {\n    history: History;\n}\n\nclass CompanyList extends Component<CompanyListProps, CompanyListState> {\n\n    // 'isAlive' is to prevent 'setState' if the user is not authorized and is pushed to logout page\n    private isAlive = true;\n    private unsubscribeCompanyList: Unsubscribe;\n\n    public constructor(props: CompanyListProps) {\n        super(props);\n        this.state = { companies: store.getState().companiesState.companies };\n    }\n\n    public async componentDidMount() {\n        this.unsubscribeCompanyList = store.subscribe(() => {\n            this.setState({ companies: store.getState().companiesState.companies });\n        });\n\n        try {\n            // Sending JWT Token with interceptor:\n            const response = await jwtAxios.get<CompanyModel[]>(globals.urls.admin.companies);\n            if (!this.isAlive) return;\n\n            store.dispatch(companiesDownloadedAction(response.data));\n            this.setState({ companies: response.data });\n        } catch (err) {\n            notify.error(err);\n\n            if (err.response?.data?.status === 401) { // UNAUTHORIZED or Token Expired\n                this.props.history.push(\"/logout\");\n            }\n        }\n    }\n\n    public render(): JSX.Element {\n        const companies = this.state.companies;\n        return (\n            <div className=\"CompanyList\">\n                {companies?.length === 0 && <p>No companies found in the system</p>}\n                {companies?.length > 0 && <p>{companies?.length} companies found in the system:</p>}\n\n                <NavLink to=\"/companies/add\" >\n                    <AddBox />\n                </NavLink>\n\n                {companies?.length > 0 && <div className=\"comp-list\">{companies?.map(c => <CompanyCard key={c.id} company={c} />)}</div>}\n            </div>\n        );\n    }\n\n    public componentWillUnmount(): void {\n        this.isAlive = false;\n        this.unsubscribeCompanyList();\n    }\n}\n\nexport default CompanyList;","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport CompanyModel from \"../../../Models/CompanyModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./MyCompanyDetails.css\";\n\nfunction MyCompanyDetails(): JSX.Element {\n\n    const [company, setCompany] = useState(null);\n    const history = useHistory();\n    const [isAlive, setIsAlive] = useState(true);\n\n    useEffect(() => {\n        async function getCompany() {\n            try {\n                const response = await jwtAxios.get<CompanyModel>(globals.urls.company.details);\n                if (!isAlive) return;\n                setCompany(response.data);\n            } catch (err) {\n                notify.error(err);\n                if (err.response.data.status === 401) { // UNAUTHORIZED or Token Expired\n                    history.push(\"/logout\");\n                }\n            }\n        };\n        getCompany();\n\n        return (() => {\n            setIsAlive(false);\n        });\n    });\n\n    return (\n        <div className=\"MyCompanyDetails\">\n            {company &&\n                <>\n                    <h2>My Details</h2>\n                    <h3> Name: {company.name}</h3>\n                    <h4>Email: {company.email}</h4>\n                    <h4>Password: {company.password}</h4>\n                    <br /><br />\n                </>\n            }\n        </div>\n    );\n}\n\nexport default MyCompanyDetails;","import { Button, ButtonGroup, IconButton, InputAdornment, TextField, Typography } from \"@material-ui/core\";\nimport { ClearAll, Edit, Send, Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { ChangeEvent, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, useParams } from \"react-router\";\nimport CompanyModel from \"../../../Models/CompanyModel\";\nimport { companyUpdatedAction } from \"../../../Redux/CompaniesState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./UpdateCompany.css\";\n\ninterface AddCustomerState {\n    showPassword: boolean;\n}\n\nfunction UpdateCompany(): JSX.Element {\n\n    const { register, handleSubmit, formState: { errors }, setValue } = useForm<CompanyModel>({\n        mode: \"all\"\n    });\n    const history = useHistory();\n    const [state, setState] = useState<AddCustomerState>({\n        showPassword: false\n    });\n\n    const handleClickShowPassword = () => {\n        setState({ ...state, showPassword: !state.showPassword });\n    };\n\n    const { id } = useParams<{ id: string }>();\n    const [company] = useState(store.getState().companiesState.companies.find(c => c.id === +id));\n    const companyInitial = { ...company };\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target;\n        switch (name) {\n            case \"email\":\n                setValue(\"email\", value);\n                break;\n            case \"password\":\n                setValue(\"password\", value);\n                break;\n        }\n    }\n\n    useEffect(() => {\n        if (company) {\n            setValue(\"id\", company.id);\n            setValue(\"name\", company.name);\n            setValue(\"email\", company.email);\n            setValue(\"password\", company.password);\n        }\n    }, [company, setValue]);\n\n    async function send(company: CompanyModel) {\n        // check: if no changes performed => show a message to the user and do nothing\n        if (!isCompanyDifferent(companyInitial, company)) {\n            notify.error(\"No changes were made!\");\n            return;\n        }\n\n        try {\n            const response = await jwtAxios.put<CompanyModel>(globals.urls.admin.company, company);\n            store.dispatch(companyUpdatedAction(response.data));\n            notify.success(\"Company has been updated!\");\n            history.push(\"/companies\");\n        } catch (err) {\n            notify.error(err);\n            if (err.response.data.status === 401) { // UNAUTHORIZED or Token Expired\n                history.push(\"/logout\");\n            }\n        }\n    }\n\n    function isCompanyDifferent(companyBefore: CompanyModel, company: CompanyModel) {\n        let isDiff: boolean = false;\n\n        // go over each entry of company (after changes)\n        Object.entries(company).forEach(afterEntry => {\n\n            // once isDiff is true => no need to check the rest of the entries\n            if (isDiff) return;\n\n            // get the same entry from the initial company object and compare them\n            const beforeEntry = Object.entries(companyBefore).find(bEntry => afterEntry[0] === bEntry[0])\n\n            if (!(afterEntry.toString() === beforeEntry.toString())) {\n                isDiff = true;\n            }\n        });\n\n        return isDiff;\n    }\n\n    return (\n        <div className=\"UpdateCompany\">\n            <Typography variant=\"h4\" className=\"Headline\"><Edit /> Update Company</Typography>\n\n            <form onSubmit={handleSubmit(send)}>\n                {/* Company name should not be changed in the system therefore the field is disabled  */}\n                <TextField label=\"Name\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"name\")}\n                    defaultValue={company?.name}\n                    disabled\n                /><br /><br />\n\n                <TextField label=\"Email\" variant=\"outlined\" className=\"mui-input\"\n                    type=\"email\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"Missing email.\" },\n                        pattern: { value: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/, message: \"Email is not valid.\" }\n                    })}\n                    defaultValue={company?.email}\n                    inputProps={{ onChange: handleChange }}\n                    error={!!errors.email}\n                    helperText={errors.email?.message}\n                /><br /><br />\n\n                <TextField label=\"Password\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"password\", {\n                        required: { value: true, message: \"Missing password.\" },\n                        minLength: { value: 4, message: \"Password too short, should be at least 4 characters.\" },\n                        pattern: { value: /^[a-zA-Z0-9]+$/gi, message: \"Use only the following characters: [a-zA-Z0-9].\" }\n                    })}\n                    type={state.showPassword ? 'text' : 'password'}\n                    defaultValue={company?.password}\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword} edge=\"end\">\n                                    {state.showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>,\n                        onChange: handleChange\n                    }}\n                    error={!!errors.password}\n                    helperText={errors.password?.message}\n                /><br /><br />\n\n                <ButtonGroup variant=\"contained\">\n                    <Button className=\"send\" startIcon={<Send />}\n                        type=\"submit\">Update</Button>\n                    <Button className=\"reset\" startIcon={<ClearAll />}\n                        type=\"reset\">Reset</Button>\n                </ButtonGroup>\n            </form>\n        </div>\n    );\n}\n\nexport default UpdateCompany;","import { Button, ButtonGroup, Checkbox, FormControlLabel, makeStyles, TextField, Typography } from \"@material-ui/core\";\nimport { Cancel, MailOutline, Send } from \"@material-ui/icons\";\nimport \"./ContactUs.css\";\n\nconst useStyles = makeStyles(theme => ({\n    Checkbox: {\n        '&:checked': {\n            backgroundColor: '#ff9c8b',\n        },\n        color: '#ff9c8b',\n        filter: 'invert(36%) sepia(77%) saturate(1565%) hue-rotate(342deg) brightness(86%) contrast(104%)',\n    },\n}));\n\nfunction ContactUs(): JSX.Element {\n\n    const classes = useStyles();\n\n    return (\n        <div className=\"ContactUs\">\n            <Typography variant=\"h4\" className=\"Headline\"> <MailOutline /> Contact Us</Typography>\n\n            <Typography variant=\"body2\">\n                This form is not supported.<br />\n                It will not be sent by pressing the submit button.\n            </Typography>\n            <br />\n\n            <TextField label=\"Name\" variant=\"outlined\" className=\"mui-input bgc-white\" />\n            <br /><br />\n\n            <TextField label=\"Email\" variant=\"outlined\" type=\"email\" className=\"mui-input bgc-white\" />\n            <br /><br />\n\n            <TextField label=\"Message\" variant=\"outlined\" className=\"mui-input bgc-white\"\n                multiline rows=\"3\"\n            /><br />\n\n            <FormControlLabel className=\"mui-input\"\n                label=\"Send me promotional emails\"\n                control={\n                    <Checkbox color=\"primary\" classes={{ root: classes.Checkbox }} />\n                }\n            /><br />\n\n            <ButtonGroup variant=\"contained\">\n                <Button className=\"send\" startIcon={<Send />}\n                    type=\"button\">Send</Button>\n                <Button className=\"cancel\" startIcon={<Cancel />}\n                    type=\"reset\">Cancel</Button>\n            </ButtonGroup>\n        </div>\n    );\n}\n\nexport default ContactUs;","export enum CategoryType {\r\n    FOOD = \"FOOD\",\r\n    ELECTRICITY = \"ELECTRICITY\",\r\n    RESTAURANT = \"RESTAURANT\",\r\n    VACATION = \"VACATION\",\r\n    CLOTHING = \"CLOTHING\"\r\n}","class Util {\r\n\r\n    public capitalize(text: string) : string {\r\n        return text.charAt(0).toLocaleUpperCase().concat(text.substring(1).toLocaleLowerCase());\r\n    }\r\n\r\n    public getDateDisplay(date: Date): string {\r\n        return date.toString().split('-').reverse().join('/');\r\n    }\r\n\r\n    public getEndOfDay(value: Date) {\r\n        const currDate: Date = new Date(Date.parse(value.toString()));\r\n        const [month, day, year] = [currDate.getMonth(), currDate.getDate(), currDate.getFullYear()];\r\n        const [hour, minutes, seconds] = [23, 59, 59];\r\n        const date: Date = new Date(year, month, day, hour, minutes, seconds);\r\n        return date;\r\n    }\r\n}\r\nconst util = new Util();\r\n\r\nexport default util;","import { Button, ButtonGroup, createStyles, FormControl, FormHelperText, InputAdornment, makeStyles, OutlinedInput, TextField, Theme, Typography } from \"@material-ui/core\";\nimport { AddBox, ClearAll, Send } from \"@material-ui/icons\";\nimport { ChangeEvent, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport { CategoryType } from \"../../../Models/CategoryType\";\nimport CouponModel from \"../../../Models/CouponModel\";\nimport { couponAddedAction } from \"../../../Redux/CouponsState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport util from \"../../../Services/Util\";\nimport \"./AddCoupon.css\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            maxWidth: 250,\n        },\n        input: {\n            backgroundColor: '#ffffff',\n        }\n    }),\n);\n\nfunction AddCoupon(): JSX.Element {\n\n    const { register, handleSubmit, formState: { errors }, getValues } = useForm<CouponModel>({\n        mode: 'all'\n    });\n    const history = useHistory();\n    const classes = useStyles();\n\n    const [category, setCategory] = useState(\"ChooseOne\");\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setCategory(event.target.value);\n    };\n\n    async function send(coupon: CouponModel) {\n        try {\n            const cFormData = new FormData();\n            cFormData.append(\"title\", coupon.title);\n            cFormData.append(\"description\", coupon.description);\n            cFormData.append(\"category\", coupon.category.toString());\n            cFormData.append(\"startDate\", coupon.startDate.toString());\n            cFormData.append(\"endDate\", coupon.endDate.toString());\n            cFormData.append(\"amount\", coupon.amount.toString());\n            cFormData.append(\"price\", coupon.price.toString());\n            cFormData.append(\"imageFile\", coupon.imageFile.item(0));\n\n            const response = await jwtAxios.post<CouponModel>(globals.urls.company.coupon, cFormData);\n            store.dispatch(couponAddedAction(response.data));\n            notify.success(\"Coupon has been added!\");\n            history.push(\"/company/coupons\");\n        } catch (err) {\n            notify.error(err);\n            if (err.response?.data?.status === 401) { // UNAUTHORIZED or Token Expired\n                history.push(\"/logout\");\n            }\n        }\n    }\n\n    return (\n        <div className=\"AddCoupon\">\n            <Typography variant=\"h4\" className=\"Headline\"><AddBox /> Add Coupon</Typography>\n\n            <form onSubmit={handleSubmit(send)}>\n                <div className=\"grid\">\n                    <TextField label=\"Title\" variant=\"outlined\" className={classes.textField}\n                        {...register(\"title\", {\n                            required: { value: true, message: \"Missing title.\" },\n                            minLength: { value: 3, message: \"Title too short.\" },\n                            pattern: { value: /^[a-zA-Z0-9 !?$%)(+-]+$/g, message: \"Use only [a-zA-Z0-9!?$%)(+-] and space.\" }\n                        })}\n                        InputProps={{ className: classes.input }}\n                        error={!!errors.title}\n                        helperText={errors.title?.message}\n                    />\n\n                    <TextField label=\"Description\" variant=\"outlined\" className={classes.textField}\n                        type=\"textarea\" multiline rows=\"3\" rowsMax={4}\n                        {...register(\"description\", {\n                            required: { value: true, message: \"Missing description.\" },\n                            pattern: { value: /^[\\w!?$%., /%&\\r\\n)*(+-]+$/g, message: \"Use only [a-zA-Z0-9!?$%., /%&)*(+-] and white spaces.\" }\n                        })}\n                        InputProps={{ className: classes.input }}\n                        error={!!errors.description}\n                        helperText={errors.description?.message}\n                    />\n\n                    <div className=\"numbers\">\n                        <TextField label=\"Amount\" variant=\"outlined\" className={classes.textField}\n                            type=\"number\"\n                            {...register(\"amount\", {\n                                required: { value: true, message: \"Missing amount.\" },\n                                pattern: { value: /^[1-9]\\d*$/g, message: \"Use only positive whole number.\" }\n                            })}\n                            InputLabelProps={{ shrink: true }}\n                            InputProps={{ className: classes.input }}\n                            error={!!errors.amount}\n                            helperText={errors.amount?.message}\n                        />\n                        &nbsp;\n                        <TextField label=\"Price\" variant=\"outlined\" className={classes.textField}\n                            type=\"number\"\n                            {...register(\"price\", {\n                                required: { value: true, message: \"Missing price.\" },\n                                pattern: { value: /^[1-9]\\d*\\.?\\d*$/g, message: \"Use only positive numbers including decimals.\" }\n                            })}\n                            InputLabelProps={{ shrink: true }}\n                            InputProps={{ className: classes.input }}\n                            inputProps={{\n                                step: 0.01,\n                                min: 0,\n                                startadornment: <InputAdornment position=\"start\">$</InputAdornment>\n                            }}\n                            error={!!errors.price}\n                            helperText={errors.price?.message}\n                        />\n                    </div>\n\n                    <TextField name=\"category\" select className={classes.textField}\n                        label=\"Please select a category\" variant=\"outlined\"\n                        onChange={handleChange}\n                        SelectProps={{ native: true }}\n                        {...register('category', {\n                            required: { value: true, message: \"Category is required.\" },\n                            pattern: { value: /^((?!ChooseOne).)*$/, message: \"Choose any of the options but the first.\" }\n                        })}\n                        InputProps={{ className: classes.input }}\n                        defaultValue={category}\n                        error={!!errors.category}\n                        helperText={errors.category?.message}\n                    >\n                        <option value=\"ChooseOne\">Choose</option>\n                        {Object.values(CategoryType).map(val =>\n                            <option key={val} value={val}>{util.capitalize(val)}</option>\n                        )}\n                    </TextField>\n\n                    <div className=\"dates\">\n                        <TextField label=\"StartDate\" variant=\"outlined\" className={classes.textField}\n                            type=\"date\"\n                            InputLabelProps={{ shrink: true }}\n                            {...register(\"startDate\", {\n                                required: { value: true, message: \"Missing start date.\" },\n                                validate: {\n                                    cannotBeInThePast: (value) => {\n                                        // get the end of the chosen day => this will allow us to choose today as the start date\n                                        const date: Date = util.getEndOfDay(value);\n                                        return Date.parse(date.toString()) >= Date.now() || \"Start date cannot be in the past\";\n                                    },\n                                    compareToEndDate: (value) => {\n                                        const { endDate } = getValues();\n                                        if (!endDate) { return true };\n                                        // Validate the coupon's dates => Start date should precede end date:\n                                        return Date.parse(value.toString()) <= Date.parse(endDate.toString()) || \"The start date should precede the end date\";\n                                    }\n                                }\n                            })}\n                            InputProps={{ className: classes.input }}\n                            error={!!errors.startDate}\n                            helperText={errors.startDate?.message}\n                        /><br />\n\n                        <TextField label=\"EndDate\" variant=\"outlined\" className={classes.textField}\n                            type=\"date\"\n                            InputLabelProps={{ shrink: true }}\n                            {...register(\"endDate\", {\n                                required: { value: true, message: \"Missing end date.\" },\n                                validate: {\n                                    cannotBeInThePast: (value) => {\n                                        return Date.parse(value.toString()) >= Date.now() || \"End date cannot be in the past\";\n                                    },\n                                    compareToStartDate: (value) => {\n                                        const { startDate } = getValues();\n                                        if (!startDate) { return true };\n                                        // Validate the coupon's dates => End date should come after the start date:\n                                        return Date.parse(startDate.toString()) <= Date.parse(value.toString()) || \"The end date should come after the start date\";\n                                    }\n                                }\n                            })}\n                            InputProps={{ className: classes.input }}\n                            error={!!errors.endDate}\n                            helperText={errors.endDate?.message}\n                        />\n                    </div>\n\n                    <FormControl variant=\"outlined\" className={classes.textField}>\n                        <OutlinedInput disabled className=\"mui-input\" label=\"Image\" />\n                        <input className=\"MuiInputBase-input MuiOutlinedInput-input file-input\"\n                            type=\"file\" name=\"image\" accept=\"image/*\"\n                            {...register(\"imageFile\", {\n                                required: { value: true, message: \"Missing image.\" }\n                            })}\n                        />\n                        <FormHelperText>{errors.imageFile?.message}</FormHelperText>\n                    </FormControl>\n                </div><br />\n\n                <ButtonGroup variant=\"contained\">\n                    <Button className=\"send\" startIcon={<Send />}\n                        type=\"submit\">Add</Button>\n                    <Button className=\"reset\" startIcon={<ClearAll />}\n                        type=\"reset\">Reset</Button>\n                </ButtonGroup>\n            </form>\n        </div>\n    );\n}\n\nexport default AddCoupon;","import { CardMedia } from \"@material-ui/core\";\nimport { Delete, Edit, ShoppingCart } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport CouponModel from \"../../../Models/CouponModel\";\nimport { UserType } from \"../../../Models/UserType\";\nimport { couponDeletedAction } from \"../../../Redux/CouponsState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport SimpleDialog from \"../../SharedArea/SimpleDialog/SimpleDialog\";\nimport \"./CouponCard.css\";\n\ninterface CouponCardProps {\n    coupon: CouponModel;\n    userType: UserType;\n    showPurchase?: boolean;\n    detailsURL: string;\n}\n\nfunction CouponCard(props: CouponCardProps): JSX.Element {\n\n    const history = useHistory();\n    const coupon = props.coupon;\n    const [open, setOpen] = useState(false);\n    const [selectedValue, setSelectedValue] = useState(\"\");\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    }\n\n    const handleClose = (value: string) => {\n        setOpen(false);\n        setSelectedValue(value);\n        value === \"delete\" && handleDelete();\n    }\n\n    const handleDelete = async () => {\n        try {\n            await jwtAxios.delete(`${globals.urls.company.coupon}${coupon.id}`);\n            store.dispatch(couponDeletedAction(coupon.id));\n            notify.success(\"Coupon has been deleted!\");\n        } catch (err) {\n            notify.error(err);\n            if (err.response?.data?.status === 401) { // UNAUTHORIZED or Token Expired\n                history.push(\"/logout\");\n            }\n        }\n    }\n\n    const handlePurchase = async () => {\n        try {\n            await jwtAxios.put(`${globals.urls.customer.purchaseCoupon}${coupon.id}`);\n            notify.success(\"Coupon has been successfully purchased! You can see it in 'My coupons'.\");\n        } catch (err) {\n            notify.error(err);\n            if (err.response?.data?.status === 401) { // UNAUTHORIZED or Token Expired\n                history.push(\"/logout\");\n            }\n        }\n    }\n\n    return (\n        <div className=\"CouponCard\">\n            <NavLink to={props.detailsURL} title=\"Click for details\">\n                {coupon?.image &&\n                    <CardMedia className=\"media\"\n                        image={coupon?.image}\n                        title={coupon?.title}\n                    />\n                }\n                <h4>{coupon?.title}</h4>\n                <span>{coupon?.description}</span>\n            </NavLink>\n            {props.userType === UserType.COMPANY &&\n                <div className=\"buttons\">\n                    <NavLink to={`/company/coupons/update/${coupon?.id}`}>\n                        <Edit />\n                    </NavLink>\n                    <NavLink to=\"#\" onClick={handleClickOpen}>\n                        <Delete />\n                    </NavLink>\n                </div>\n            }\n            {props.showPurchase &&\n                <div className=\"buttons\">\n                    <NavLink to=\"#\" onClick={handlePurchase}>\n                        <ShoppingCart />\n                    </NavLink>\n                </div>\n            }\n\n            <SimpleDialog\n                title={`${globals.dialogTitles.deleteItem} '${coupon?.title}'?`}\n                selectedValue={selectedValue}\n                open={open} onClose={handleClose}\n            />\n        </div>\n    );\n}\n\nexport default CouponCard;","import { InputAdornment, TextField } from \"@material-ui/core\";\nimport { AddBox } from \"@material-ui/icons\";\nimport { History } from \"history\";\nimport { ChangeEvent, Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Unsubscribe } from \"redux\";\nimport { CategoryType } from \"../../../Models/CategoryType\";\nimport CouponModel from \"../../../Models/CouponModel\";\nimport { UserType } from \"../../../Models/UserType\";\nimport { couponsDownloadedAction } from \"../../../Redux/CouponsState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport util from \"../../../Services/Util\";\nimport CouponCard from \"../CouponCard/CouponCard\";\nimport \"./CompanyCouponList.css\";\n\ninterface CompanyCouponListState {\n    coupons: CouponModel[];\n    filterBy: string;\n    filterSelectedValue: string | number;\n}\n\ninterface CompanyCouponListProps {\n    history: History;\n}\n\nclass CompanyCouponList extends Component<CompanyCouponListProps, CompanyCouponListState> {\n\n    // 'isAlive' is to prevent 'setState' if the user is not authorized and is pushed to logout page\n    private isAlive = true;\n    private unsubscribeCompanyCouponList: Unsubscribe;\n\n    public constructor(props: CompanyCouponListProps) {\n        super(props);\n        this.state = {\n            coupons: store.getState().couponsState.coupons,\n            filterBy: \"All\",\n            filterSelectedValue: null\n        };\n    }\n\n    public setFilterBy = (filterBy: string) => {\n        this.setState({ filterBy });\n    }\n\n    public setFilterSelectedValue = (filterSelectedValue: string | number) => {\n        this.setState({ filterSelectedValue });\n    }\n\n    public handleChangeFilter = (event: ChangeEvent<{ name?: string; value: any; }>) => {\n        const { value } = event.target;\n        switch (value) {\n            case \"price\":\n            case \"All\":\n                this.setFilterBy(value);\n                this.setFilterSelectedValue(null);\n                break;\n            default:\n                this.setFilterBy(\"category\");\n                this.setFilterSelectedValue((value as string).toLowerCase());\n                break;\n        }\n    }\n\n    public handleChangeMaxPrice = (event: ChangeEvent<HTMLInputElement>) => {\n        this.setFilterSelectedValue(+event.target.value);\n    }\n\n    public async componentDidMount() {\n        this.unsubscribeCompanyCouponList = store.subscribe(() => {\n            this.setState({ coupons: store.getState().couponsState.coupons });\n        });\n\n        try {\n            const response = await jwtAxios.get<CouponModel[]>(globals.urls.company.coupons);\n            if (!this.isAlive) return;\n\n            store.dispatch(couponsDownloadedAction(response.data));\n            this.setState({ coupons: response.data });\n        } catch (err) {\n            notify.error(err);\n            if (err.response?.data?.status === 401) { // UNAUTHORIZED or Token Expired\n                this.props.history.push(\"/logout\");\n            }\n        }\n    }\n\n    public getCouponsForDisplay() {\n        if (!this.state.coupons || this.state.coupons.length === 0) return [];\n        if (this.state.filterBy === \"All\") return this.state.coupons;\n\n        const coupons = this.state.coupons.filter(coupon => {\n            const filterVal = this.state.filterSelectedValue;\n            if (this.state.filterBy === \"price\") {\n                return coupon.price <= (filterVal as number);\n            } else {\n                return coupon.category.toLowerCase().includes((filterVal as string).toLowerCase());\n            }\n        });\n        return coupons;\n    }\n\n    public render(): JSX.Element {\n        const coupons = this.getCouponsForDisplay();\n        const filterVal = this.state.filterSelectedValue;\n        const filterBy = this.state.filterBy;\n        const category = \"category\";\n        const price = \"price\";\n\n        return (\n            <div className=\"CompanyCouponList\">\n                {coupons?.length === 0 && <><p>No coupons found in the system\n                    {filterBy === category && <span> for {`${filterVal} ${category}`}</span>}\n                    {filterBy === price && <span> with up to ${`${filterVal ? filterVal : 0} ${price}`}</span>}\n                </p></>}\n                {coupons?.length > 0 && <><p>{coupons?.length} coupons found in the system:</p></>}\n\n                <NavLink to=\"/company/coupons/add\">\n                    <AddBox />\n                </NavLink>\n\n                <TextField name=\"category\" select className=\"mui-select\"\n                    label=\"Filter by category\" variant=\"outlined\"\n                    SelectProps={{\n                        native: true,\n                        onChange: (e: ChangeEvent<{ name?: string; value: any; }>) => {\n                            this.handleChangeFilter(e);\n                        }\n                    }}\n                >\n                    <option value=\"All\">All</option>\n                    {Object.values(CategoryType).map(val =>\n                        <option key={val} value={val}>{util.capitalize(val)}</option>\n                    )}\n                    <option value=\"price\">Price</option>\n                </TextField>\n\n                {filterBy === price &&\n                    <>\n                        &nbsp;\n                        <TextField label=\"Max Price\" variant=\"outlined\" className=\"mui-select\"\n                            type=\"number\"\n                            InputLabelProps={{ shrink: true }}\n                            inputProps={{\n                                step: 0.01,\n                                min: 0,\n                                startadornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                                onChange: (e: ChangeEvent<HTMLInputElement>) => this.handleChangeMaxPrice(e),\n                            }}\n                        />\n                    </>\n                }<br /><br />\n\n                {coupons?.length > 0 &&\n                    <div className=\"coupon-list\">\n                        {coupons?.map(c =>\n                            <CouponCard key={`co${c.id}`} coupon={c}\n                                detailsURL={`/company/coupons/${c.id}`}\n                                userType={UserType.COMPANY}\n                            />)\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n\n    public componentWillUnmount(): void {\n        this.isAlive = false;\n        this.unsubscribeCompanyCouponList();\n    }\n}\n\nexport default CompanyCouponList;","import { History } from \"history\";\nimport { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport CouponModel from \"../../../Models/CouponModel\";\nimport { UserType } from \"../../../Models/UserType\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport util from \"../../../Services/Util\";\nimport \"./CouponDetails.css\";\n\ninterface RouteParam {\n    id: string;\n}\n\ninterface CouponDetailsProps extends RouteComponentProps<RouteParam> {\n    history: History;\n}\n\ninterface CouponDetailsState {\n    coupon: CouponModel;\n}\n\nclass CouponDetails extends Component<CouponDetailsProps, CouponDetailsState> {\n\n    public constructor(props: CouponDetailsProps) {\n        super(props);\n        this.state = { coupon: null };\n    }\n\n    public async componentDidMount() {\n        try {\n            const id = +this.props.match.params.id;\n            let coupon = store.getState().couponsState.coupons.find(c => c.id === id);\n            if (coupon) {\n                this.setState({ coupon });\n            } else if (id > 0) {\n                const userType = store.getState().authState.user.userType;\n\n                let url: string = \"\";\n                if (userType === UserType.COMPANY) url = globals.urls.company.coupon;\n                if (userType === UserType.CUSTOMER) url = globals.urls.customer.coupon;\n\n                const response = await jwtAxios.get<CouponModel>(`${url}/${id}`);\n                coupon = response.data;\n                notify.success(\"Coupon details were received!\");\n                this.setState({ coupon });\n            }\n        } catch (err) {\n            notify.error(err);\n            if (err.response.data.status === 401) { // UNAUTHORIZED or Token Expired\n                this.props.history.push(\"/logout\");\n            }\n        }\n    }\n\n    public render(): JSX.Element {\n        const coupon = this.state.coupon;\n        const dStart = coupon?.startDate ? util.getDateDisplay(coupon.startDate) : \"\";\n        const dEnd = coupon?.endDate ? util.getDateDisplay(coupon.endDate) : \"\";\n        return (\n            <div className=\"CouponDetails\">\n                {coupon &&\n                    <div className=\"box\">\n                        <div>\n                            <img src={coupon?.image}\n                                alt={coupon?.title} title={coupon?.title}\n                            />\n                        </div>\n                        <div>\n                            <h2>Coupon Details</h2>\n                            <p>Title: <br />\n                                <span className=\"title\">{coupon?.title}</span>\n                            </p>\n                            <p>Description:<br />\n                                <span className=\"bold-small\">{coupon?.description}</span>\n                            </p>\n                            <p>Category: &nbsp;\n                                <span className=\"bold-small\">{coupon?.category}</span>\n                            </p>\n                            <p>Start date: &nbsp;\n                                <span className=\"bold-small\">{dStart}</span>\n                            </p>\n                            <p>End date: &nbsp;\n                                <span className=\"bold-small\">{dEnd}</span>\n                            </p>\n                            <p>Amount: &nbsp;\n                                <span className=\"bold-small\">{coupon?.amount}</span>\n                            </p>\n                            <p>Price: &nbsp;\n                                <span className=\"bold-small\">${coupon?.price}</span>\n                            </p>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default CouponDetails;","import { InputAdornment, TextField } from \"@material-ui/core\";\nimport { History } from \"history\";\nimport { ChangeEvent, Component } from \"react\";\nimport { Unsubscribe } from \"redux\";\nimport { CategoryType } from \"../../../Models/CategoryType\";\nimport CouponModel from \"../../../Models/CouponModel\";\nimport { UserType } from \"../../../Models/UserType\";\nimport { couponsDownloadedAction } from \"../../../Redux/CouponsState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport util from \"../../../Services/Util\";\nimport CouponCard from \"../CouponCard/CouponCard\";\nimport \"./CustomerCouponList.css\";\n\ninterface CustomerCouponListState {\n    coupons: CouponModel[];\n    listSelected: string;\n    filterBy: string;\n    filterSelectedValue: string | number;\n}\n\ninterface CustomerCouponListProps {\n    history: History;\n}\n\nclass CustomerCouponList extends Component<CustomerCouponListProps, CustomerCouponListState> {\n\n    // 'isAlive' is to prevent 'setState' if the user is not authorized and is pushed to logout page\n    private isAlive = true;\n    private unsubscribeCustomerCouponList: Unsubscribe;\n\n    public constructor(props: CustomerCouponListProps) {\n        super(props);\n        this.state = {\n            coupons: store.getState().couponsState.coupons,\n            listSelected: \"LastChance\",\n            filterBy: \"All\",\n            filterSelectedValue: null\n        };\n    }\n\n    public setFilterBy = (filterBy: string) => {\n        this.setState({ filterBy });\n    }\n\n    public setFilterSelectedValue = (filterSelectedValue: string | number) => {\n        this.setState({ filterSelectedValue });\n    }\n\n    public handleChangeMaxPrice = (event: ChangeEvent<HTMLInputElement>) => {\n        this.setFilterSelectedValue(+event.target.value);\n    }\n\n    public setListSelectedValue = (listSelected: string) => {\n        this.setState({ listSelected });\n    }\n\n    public async getCouponList(url: string) {\n        try {\n            const response = await jwtAxios.get<CouponModel[]>(url);\n            if (!this.isAlive) return;\n\n            store.dispatch(couponsDownloadedAction(response.data));\n            this.setState({ coupons: response.data });\n        } catch (err) {\n            notify.error(err);\n            if (err.response?.data?.status === 401) { // UNAUTHORIZED or Token Expired\n                this.props.history.push(\"/logout\");\n            }\n        }\n    }\n\n    public handleChangeList = (event: ChangeEvent<{ name?: string; value: any; }>) => {\n        const { value } = event.target;\n        switch (value) {\n            case \"LastChance\":\n                this.setListSelectedValue(value);\n                this.getCouponList(globals.urls.customer.couponsAboutToExpire);\n                break;\n            case \"MyCoupons\":\n                this.setListSelectedValue(value);\n                this.getCouponList(globals.urls.customer.coupons);\n                break;\n            case \"BuyCoupons\":\n                this.setListSelectedValue(value);\n                this.getCouponList(globals.urls.customer.couponsCanPurchase);\n                break;\n        }\n    }\n\n    public handleChangeFilter = (event: ChangeEvent<{ name?: string; value: any; }>) => {\n        const { value } = event.target;\n        switch (value) {\n            case \"price\":\n            case \"All\":\n                this.setFilterBy(value);\n                this.setFilterSelectedValue(null);\n                break;\n            default:\n                this.setFilterBy(\"category\");\n                this.setFilterSelectedValue((value as string).toLowerCase());\n                break;\n        }\n    }\n\n    public async componentDidMount() {\n        this.unsubscribeCustomerCouponList = store.subscribe(() => {\n            this.setState({ coupons: store.getState().couponsState.coupons });\n        });\n\n        this.getCouponList(globals.urls.customer.couponsAboutToExpire);\n    }\n\n    public getCouponsForDisplay() {\n        if (!this.state.coupons || this.state.coupons.length === 0) return [];\n        if (this.state.filterBy === \"All\") return this.state.coupons;\n\n        const coupons = this.state.coupons.filter(coupon => {\n            const filterVal = this.state.filterSelectedValue;\n            if (this.state.filterBy === \"price\") {\n                return coupon.price <= (filterVal as number);\n            } else {\n                return coupon.category.toLowerCase().includes((filterVal as string).toLowerCase());\n            }\n        });\n        return coupons;\n    }\n\n    public render(): JSX.Element {\n        const coupons = this.getCouponsForDisplay();\n        const filterVal = this.state.filterSelectedValue;\n        const filterBy = this.state.filterBy;\n        const listSelected = this.state.listSelected;\n        const category = \"category\";\n        const price = \"price\";\n\n        return (\n            <div className=\"CustomerCouponList\">\n                {coupons?.length === 0 &&\n                    <p>No coupons found in the system\n                        {filterBy === category && <span> for {`${filterVal} ${category}`}</span>}\n                        {filterBy === price && <span> with up to ${`${filterVal ? filterVal : 0} ${price}`}</span>}\n                    </p>\n                }\n                {coupons?.length > 0 && <><p>{coupons?.length} coupons found in the system:</p></>}\n                <br />\n\n                <TextField name=\"list\" select className=\"mui-select\"\n                    label=\"Show coupons by\" variant=\"outlined\"\n                    SelectProps={{\n                        native: true,\n                        onChange: (e: ChangeEvent<{ name?: string; value: any; }>) => {\n                            this.handleChangeList(e);\n                        }\n                    }}\n                >\n                    <option value=\"LastChance\">Last chance</option>\n                    <option value=\"MyCoupons\">My coupons</option>\n                    <option value=\"BuyCoupons\">Buy coupons</option>\n                </TextField>\n                    &nbsp;\n                <TextField name=\"category\" select className=\"mui-select\"\n                    label=\"Filter by\" variant=\"outlined\"\n                    SelectProps={{\n                        native: true,\n                        onChange: (e: ChangeEvent<{ name?: string; value: any; }>) => {\n                            this.handleChangeFilter(e);\n                        }\n                    }}\n                >\n                    <option value=\"All\">All</option>\n                    {Object.values(CategoryType).map(val =>\n                        <option key={val} value={val}>{util.capitalize(val)}</option>\n                    )}\n                    <option value=\"price\">Price</option>\n                </TextField>\n\n                {filterBy === price &&\n                    <>\n                        &nbsp;\n                        <TextField label=\"Max Price\" variant=\"outlined\" className=\"mui-select\"\n                            type=\"number\"\n                            InputLabelProps={{ shrink: true }}\n                            inputProps={{\n                                step: 0.01,\n                                min: 0,\n                                startadornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                                onChange: (e: ChangeEvent<HTMLInputElement>) => this.handleChangeMaxPrice(e),\n\n                            }}\n                        />\n                    </>\n                }<br /><br />\n\n                {coupons?.length > 0 &&\n                    <div className=\"coupon-list\">\n                        {coupons?.map(c =>\n                            <CouponCard key={`cu${c.id}`} coupon={c}\n                                showPurchase={(listSelected !== \"MyCoupons\" ? true : false)}\n                                detailsURL={`/customer/coupons/${c.id}`}\n                                userType={UserType.CUSTOMER}\n                            />)\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n\n    public componentWillUnmount(): void {\n        this.isAlive = false;\n        this.unsubscribeCustomerCouponList();\n    }\n}\n\nexport default CustomerCouponList;","import { Button, ButtonGroup, createStyles, FormControl, FormHelperText, InputAdornment, makeStyles, OutlinedInput, TextField, Theme, Typography } from \"@material-ui/core\";\nimport { ClearAll, Edit, Send } from \"@material-ui/icons\";\nimport { ChangeEvent, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, useParams } from \"react-router\";\nimport { CategoryType } from \"../../../Models/CategoryType\";\nimport CouponModel from \"../../../Models/CouponModel\";\nimport { couponUpdatedAction } from \"../../../Redux/CouponsState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport util from \"../../../Services/Util\";\nimport \"./UpdateCoupon.css\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            maxWidth: 250\n        },\n        input: {\n            backgroundColor: '#ffffff',\n        }\n    }),\n);\n\nfunction UpdateCoupon(): JSX.Element {\n\n    const { register, handleSubmit, formState: { errors }, setValue, getValues } = useForm<CouponModel>({\n        mode: \"all\"\n    });\n    const history = useHistory();\n    const classes = useStyles();\n\n    const { id } = useParams<{ id: string }>();\n    const couponId: number = +id;\n    const [coupon] = useState(\n        store.getState().couponsState.coupons.find(c => c.id === couponId)\n    );\n    const couponInitial = { ...coupon };\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target;\n        switch (name) {\n            case \"title\":\n                setValue(\"title\", value);\n                break;\n            case \"description\":\n                setValue(\"description\", value);\n                break;\n            case \"amount\":\n                setValue(\"amount\", +value);\n                break;\n            case \"price\":\n                setValue(\"price\", +value);\n                break;\n            case \"category\":\n                setValue(\"category\", CategoryType[value as keyof typeof CategoryType]);\n                break;\n            case \"startDate\":\n                setValue(\"startDate\", new Date(value));\n                break;\n            case \"endDate\":\n                setValue(\"endDate\", new Date(value));\n                break;\n        }\n    }\n\n    useEffect(() => {\n        if (coupon) {\n            setValue(\"id\", couponId);\n            setValue(\"title\", coupon.title);\n            setValue(\"description\", coupon.description);\n            setValue(\"amount\", coupon.amount);\n            setValue(\"price\", coupon.price);\n            setValue(\"category\", coupon.category);\n            setValue(\"startDate\", coupon.startDate);\n            setValue(\"endDate\", coupon.endDate);\n            setValue(\"image\", coupon.image);\n        }\n    }, [coupon, couponId, setValue]);\n\n    async function send(coupon: CouponModel) {\n        // check: if no changes performed => do nothing\n        if (!isCouponDifferent(couponInitial, coupon)) {\n            notify.error(\"No changes were made!\");\n            return;\n        }\n\n        try {\n            const myFormData = new FormData();\n            myFormData.append(\"id\", coupon.id.toString());\n            myFormData.append(\"title\", coupon.title);\n            myFormData.append(\"description\", coupon.description);\n            myFormData.append(\"category\", coupon.category.toString());\n            myFormData.append(\"startDate\", coupon.startDate.toString());\n            myFormData.append(\"endDate\", coupon.endDate.toString());\n            myFormData.append(\"amount\", coupon.amount.toString());\n            myFormData.append(\"price\", coupon.price.toString());\n            myFormData.append(\"image\", coupon.image);\n\n            // imageFile is not required for update => \n            // append to FormData only if there is a new file to upload\n            if (coupon.imageFile.length > 0) {\n                myFormData.append(\"imageFile\", coupon.imageFile.item(0));\n            }\n\n            const response = await jwtAxios.put<CouponModel>(globals.urls.company.coupon, myFormData);\n            store.dispatch(couponUpdatedAction(response.data));\n            notify.success(\"Coupon has been updated!\");\n            history.push(\"/company/coupons\");\n        } catch (err) {\n            notify.error(err);\n            if (err.response?.data?.status === 401) { // UNAUTHORIZED or Token Expired\n                history.push(\"/logout\");\n            }\n        }\n    }\n\n    function isCouponDifferent(couponBefore: CouponModel, coupon: CouponModel) {\n        let isDiff: boolean = false;\n\n        // for each entry of coupon (after changes)\n        Object.entries(coupon).forEach(afterEntry => {\n\n            // once isDiff is true => no need to check the rest of the entries\n            if (isDiff) return;\n\n            // get the same entry from the initial company object and compare them\n            const beforeEntry = Object.entries(couponBefore).find(bEntry => afterEntry[0] === bEntry[0])\n\n            // if \"imageFile\" has a new file => the entries are different\n            if (afterEntry[1] instanceof FileList) {\n                if ((afterEntry[1] as FileList).length > 0) {\n                    isDiff = true;\n                }\n            } else if (!(afterEntry.toString() === beforeEntry.toString())) {\n                isDiff = true;\n            }\n        });\n        return isDiff;\n    }\n\n    return (\n        <div className=\"UpdateCoupon\">\n            <Typography variant=\"h4\" className=\"Headline\"> <Edit /> Update Coupon</Typography>\n\n            <form onSubmit={handleSubmit(send)}>\n                <div className=\"grid\">\n                    <div className=\"texts\">\n                        <TextField label=\"Title\" variant=\"outlined\" className={classes.textField}\n                            {...register(\"title\", {\n                                required: { value: true, message: \"Missing title.\" },\n                                minLength: { value: 3, message: \"Title too short.\" },\n                                pattern: { value: /^[a-zA-Z0-9 !?$%)(+-]+$/g, message: \"Use only [a-zA-Z0-9!?$%)(+-] and space.\" }\n                            })}\n                            InputProps={{ className: classes.input }}\n                            inputProps={{ onChange: handleChange }}\n                            defaultValue={coupon?.title}\n                            error={!!errors.title}\n                            helperText={errors.title?.message}\n                        /><br />\n\n                        <TextField label=\"Description\" variant=\"outlined\" className={classes.textField}\n                            type=\"textarea\" multiline rows=\"3\" rowsMax={4}\n                            {...register(\"description\", {\n                                required: { value: true, message: \"Missing description.\" },\n                                pattern: { value: /^[\\w!?$%., /%&\\r\\n)*(+-]+$/g, message: \"Use only [a-zA-Z0-9!?$%., /%&)*(+-] and white spaces.\" }\n                            })}\n                            InputProps={{ className: classes.input }}\n                            inputProps={{ onChange: handleChange }}\n                            defaultValue={coupon?.description}\n                            error={!!errors.description}\n                            helperText={errors.description?.message}\n                        />\n                    </div>\n\n                    <div className=\"dates\">\n                        <TextField label=\"StartDate\" variant=\"outlined\" className={classes.textField}\n                            type=\"date\"\n                            {...register(\"startDate\", {\n                                required: { value: true, message: \"Missing start date.\" },\n                                validate: {\n                                    compareToEndDate: (value) => {\n                                        const { endDate } = getValues();\n                                        if (!endDate) { return true };\n                                        // Validate the coupon's dates => Start date should precede end date:\n                                        return Date.parse(value.toString()) <= Date.parse(endDate.toString()) || \"The start date should precede the end date\";\n                                    }\n                                }\n                            })}\n                            InputLabelProps={{ shrink: true }}\n                            InputProps={{ className: classes.input }}\n                            inputProps={{ onChange: handleChange }}\n                            defaultValue={coupon?.startDate}\n                            error={!!errors.startDate}\n                            helperText={errors.startDate?.message}\n                        /><br />\n\n                        <TextField label=\"EndDate\" variant=\"outlined\" className={classes.textField}\n                            type=\"date\"\n                            {...register(\"endDate\", {\n                                required: { value: true, message: \"Missing end date.\" },\n                                validate: {\n                                    compareToStartDate: (value) => {\n                                        const { startDate } = getValues();\n                                        if (!startDate) { return true };\n                                        // Validate the coupon's dates => End date should come after the start date:\n                                        return Date.parse(startDate.toString()) <= Date.parse(value.toString()) || \"The end date should come after the start date\";\n                                    }\n                                }\n                            })}\n                            InputLabelProps={{ shrink: true }}\n                            InputProps={{ className: classes.input }}\n                            inputProps={{ onChange: handleChange }}\n                            defaultValue={coupon?.endDate}\n                            error={!!errors.endDate}\n                            helperText={errors.endDate?.message}\n                        />\n                    </div>\n\n                    <TextField name=\"category\" select className={classes.textField}\n                        label=\"Please select a category\" variant=\"outlined\"\n                        {...register(\"category\", {\n                            required: { value: true, message: \"Category is required.\" },\n                            pattern: { value: /^((?!ChooseOne).)*$/, message: \"Choose any of the options but the first.\" }\n                        })}\n                        SelectProps={{ native: true }}\n                        InputProps={{ className: classes.input }}\n                        inputProps={{ onChange: handleChange }}\n                        defaultValue={coupon?.category}\n                        error={!!errors.category}\n                        helperText={errors.category?.message}\n                    >\n                        <option value=\"ChooseOne\">Choose</option>\n                        {Object.values(CategoryType).map(val =>\n                            <option key={val} value={val}>{util.capitalize(val)}</option>\n                        )}\n                    </TextField>\n\n                    <div className=\"numbers\">\n                        <TextField label=\"Amount\" variant=\"outlined\" className={classes.textField}\n                            type=\"number\"\n                            {...register(\"amount\", {\n                                required: { value: true, message: \"Missing amount.\" },\n                                pattern: { value: /^[1-9]\\d*$/g, message: \"Use only positive whole number.\" }\n                            })}\n                            InputLabelProps={{ shrink: true }}\n                            InputProps={{ className: classes.input }}\n                            inputProps={{ onChange: handleChange }}\n                            defaultValue={coupon?.amount}\n                            error={!!errors.amount}\n                            helperText={errors.amount?.message}\n                        />\n                        &nbsp;\n                        <TextField label=\"Price\" variant=\"outlined\" className={classes.textField}\n                            type=\"number\"\n                            {...register(\"price\", {\n                                required: { value: true, message: \"Missing price.\" },\n                                pattern: { value: /^[1-9]\\d*\\.?\\d*$/g, message: \"Use only positive numbers including decimals.\" }\n                            })}\n                            InputLabelProps={{ shrink: true }}\n                            InputProps={{ className: classes.input }}\n                            inputProps={{\n                                step: 0.01,\n                                min: 0,\n                                startadornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                                onChange: handleChange\n                            }}\n                            defaultValue={coupon?.price}\n                            error={!!errors.price}\n                            helperText={errors.price?.message}\n                        />\n                    </div>\n\n                    <div className=\"files\">\n                        {coupon?.image &&\n                            <>\n                                <img className={classes.textField}\n                                    src={coupon?.image}\n                                    alt={coupon?.title} title={coupon?.title}\n                                />\n                                <br />\n                            </>\n                        }\n\n                        {/* Image file is not required in the update form */}\n                        <FormControl variant=\"outlined\" className={classes.textField}>\n                            <OutlinedInput disabled className=\"mui-input\" label=\"Image\" />\n                            <input className=\"MuiInputBase-input MuiOutlinedInput-input file-input\"\n                                type=\"file\" name=\"image\" accept=\"image/*\"\n                                {...register(\"imageFile\")}\n                            />\n                            <FormHelperText>{errors.imageFile?.message}</FormHelperText>\n                        </FormControl>\n                    </div>\n                </div><br />\n\n                <ButtonGroup variant=\"contained\">\n                    <Button className=\"send\" startIcon={<Send />}\n                        type=\"submit\">Update</Button>\n                    <Button className=\"reset\" startIcon={<ClearAll />}\n                        type=\"reset\">Reset</Button>\n                </ButtonGroup>\n            </form>\n        </div>\n    );\n}\n\nexport default UpdateCoupon;","import { Button, ButtonGroup, IconButton, InputAdornment, TextField, Typography } from \"@material-ui/core\";\nimport { AddBox, ClearAll, Send, Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport CustomerModel from \"../../../Models/CustomerModel\";\nimport { customerAddedAction } from \"../../../Redux/CustomersState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./AddCustomer.css\";\n\nfunction AddCustomer(): JSX.Element {\n\n    const { register, handleSubmit, formState: { errors, isValid } } = useForm<CustomerModel>({\n        mode: \"all\"\n    });\n    const history = useHistory();\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    async function send(customer: CustomerModel) {\n        try {\n            const response = await jwtAxios.post<CustomerModel>(globals.urls.admin.customer, customer);\n            store.dispatch(customerAddedAction(response.data));\n            notify.success(\"Customer has been added!\");\n            history.push(\"/customers\");\n        } catch (err) {\n            notify.error(err);\n            if (err.response.data.status === 401) { // UNAUTHORIZED or Token Expired\n                history.push(\"/logout\");\n            }\n        }\n    }\n\n    return (\n        <div className=\"AddCustomer\">\n            <Typography variant=\"h4\" className=\"Headline\"> <AddBox /> Add Customer</Typography>\n\n            <form onSubmit={handleSubmit(send)}>\n                <TextField label=\"FirstName\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"firstName\", {\n                        required: { value: true, message: \"Missing first name.\" },\n                        minLength: { value: 3, message: \"First name too short.\" },\n                        pattern: { value: /[^\\W ]/g, message: \"Use only alphanumeric & underscore characters and space.\" }\n                    })}\n                    error={!!errors.firstName}\n                    helperText={errors.firstName?.message}\n                /><br /><br />\n\n                <TextField label=\"LastName\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"lastName\", {\n                        required: { value: true, message: \"Missing last name.\" },\n                        minLength: { value: 3, message: \"Last name too short.\" },\n                        pattern: { value: /[^\\W ]/g, message: \"Use only alphanumeric & underscore characters and space.\" }\n                    })}\n                    error={!!errors.lastName}\n                    helperText={errors.lastName?.message}\n                /><br /><br />\n\n                <TextField label=\"Email\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"Missing email.\" },\n                        pattern: { value: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/, message: \"Email is not valid.\" }\n                    })}\n                    error={!!errors.email}\n                    helperText={errors.email?.message}\n                /><br /><br />\n\n                <TextField label=\"Password\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"password\", {\n                        required: { value: true, message: \"Missing password.\" },\n                        minLength: { value: 4, message: \"Password too short, should be at least 4 characters.\" },\n                        pattern: { value: /^[a-zA-Z0-9]+$/gi, message: \"Use only the following characters: [a-zA-Z0-9].\" }\n                    })}\n                    type={showPassword ? 'text' : 'password'}\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                <IconButton aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword} edge=\"end\">\n                                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>,\n                    }}\n                    error={!!errors.password}\n                    helperText={errors.password?.message}\n                /><br /><br />\n\n                <ButtonGroup variant=\"contained\">\n                    <Button className=\"send\" startIcon={<Send />}\n                        type=\"submit\" disabled={!isValid}>Add</Button>\n                    <Button className=\"reset\" startIcon={<ClearAll />}\n                        type=\"reset\">Reset</Button>\n                </ButtonGroup>\n            </form>\n        </div>\n    );\n}\n\nexport default AddCustomer;","import { History } from \"history\";\nimport { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport CustomerModel from \"../../../Models/CustomerModel\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./CustomerDetails.css\";\n\ninterface RouteParam {\n    id: string;\n}\n\ninterface CustomerDetailsProps extends RouteComponentProps<RouteParam> {\n    history: History;\n}\n\ninterface CustomerDetailsState {\n    customer: CustomerModel;\n}\n\nclass CustomerDetails extends Component<CustomerDetailsProps, CustomerDetailsState> {\n\n    public constructor(props: CustomerDetailsProps) {\n        super(props);\n        this.state = { customer: null };\n    }\n\n    public async componentDidMount() {\n        try {\n            const id = +this.props.match.params.id;\n            let customer = store.getState().customersState.customers.find(c => c.id === id);\n            if (customer) {\n                this.setState({ customer });\n            } else if (id > 0) {\n                const response = await jwtAxios.get<CustomerModel>(`${globals.urls.admin.customer}/${id}`);\n                customer = response.data;\n                notify.success(\"Customer details were received!\");\n                this.setState({ customer });\n            }\n        } catch (err) {\n            notify.error(err);\n            if (err.response.data.status === 401) { // UNAUTHORIZED or Token Expired\n                this.props.history.push(\"/logout\");\n            }\n        }\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"CustomerDetails\">\n                {this.state.customer &&\n                    <>\n                        <h2>Customer Details</h2>\n                        <h3>First name: {this.state.customer.firstName}</h3>\n                        <h3>Last name: {this.state.customer.lastName}</h3>\n                        <h4>Email: {this.state.customer.email}</h4>\n                        <h4>Password: {this.state.customer.password}</h4>\n                        <br /><br />\n                    </>\n                }\n            </div>\n        );\n    }\n}\n\nexport default CustomerDetails;","import { Delete, Edit } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport CustomerModel from \"../../../Models/CustomerModel\";\nimport { customerDeletedAction } from \"../../../Redux/CustomersState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport SimpleDialog from \"../../SharedArea/SimpleDialog/SimpleDialog\";\nimport \"./CustomerCard.css\";\n\ninterface CustomerCardProps {\n    customer: CustomerModel\n}\n\nfunction CustomerCard(props: CustomerCardProps): JSX.Element {\n\n    const customer = props.customer;\n    const [open, setOpen] = useState(false);\n    const [selectedValue, setSelectedValue] = useState(\"\");\n    const history = useHistory();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    }\n\n    const handleClose = (value: string) => {\n        setOpen(false);\n        setSelectedValue(value);\n\n        value === \"delete\" && handleDelete();\n    }\n\n    const handleDelete = async () => {\n        try {\n            await jwtAxios.delete(`${globals.urls.admin.customer}${customer.id}`);\n            store.dispatch(customerDeletedAction(customer.id));\n            notify.success(\"Customer was deleted!\");\n        } catch (err) {\n            notify.error(err);\n            if (err.response.data.status === 401) { // UNAUTHORIZED or Token Expired\n                history.push(\"/logout\");\n            }\n        }\n    }\n\n    return (\n        <div className=\"CustomerCard\">\n            <NavLink to={`/customers/${customer.id}`} title=\"Click for details\">\n                <h4>{customer.firstName} {customer.lastName}</h4>\n                <span>Email: {customer.email}</span>\n            </NavLink><br />\n            <div className=\"buttons\">\n                <NavLink to={`/customers/update/${customer.id}`}>\n                    <Edit />\n                </NavLink>\n                <NavLink to=\"#\" onClick={handleClickOpen}>\n                    <Delete />\n                </NavLink>\n            </div>\n\n            <SimpleDialog\n                title={`${globals.dialogTitles.deleteItem} ${customer.firstName} ${customer.lastName}?`}\n                selectedValue={selectedValue}\n                open={open} onClose={handleClose}\n            />\n        </div>\n    );\n}\n\nexport default CustomerCard;","import { AddBox } from \"@material-ui/icons\";\nimport { History } from \"history\";\nimport { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Unsubscribe } from \"redux\";\nimport CustomerModel from \"../../../Models/CustomerModel\";\nimport { customersDownloadedAction } from \"../../../Redux/CustomersState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport CustomerCard from \"../CustomerCard/CustomerCard\";\nimport \"./CustomerList.css\";\n\ninterface CustomerListState {\n    customers: CustomerModel[];\n}\n\ninterface CustomerListProps {\n    history: History;\n}\n\nclass CustomerList extends Component<CustomerListProps, CustomerListState> {\n\n    // 'isAlive' is to prevent 'setState' if the user is not authorized and is pushed to logout page\n    private isAlive = true;\n    private unsubscribeCustomerList: Unsubscribe;\n\n    public constructor(props: CustomerListProps) {\n        super(props);\n        this.state = { customers: store.getState().customersState.customers };\n    }\n\n    public async componentDidMount() {\n        this.unsubscribeCustomerList = store.subscribe(() => {\n            this.setState({ customers: store.getState().customersState.customers });\n        });\n\n        try {\n            // Sending JWT Token with interceptor:\n            const response = await jwtAxios.get<CustomerModel[]>(globals.urls.admin.customers);\n            if (!this.isAlive) return;\n\n            store.dispatch(customersDownloadedAction(response.data));\n            this.setState({ customers: response.data });\n        } catch (err) {\n            notify.error(err);\n\n            if (err.response?.data?.status === 401) { // UNAUTHORIZED or Token Expired\n                this.props.history.push(\"/logout\");\n            }\n        }\n    }\n\n    public render(): JSX.Element {\n        const customers = this.state.customers;\n        return (\n            <div className=\"CustomerList\">\n                {customers.length === 0 && <><p>No customers found in the system</p></>}\n                {customers.length > 0 && <><p>{customers.length} customers found in the system:</p></>}\n\n                <NavLink to=\"/customers/add\" >\n                    <AddBox />\n                </NavLink>\n\n                {customers.length > 0 && <div className=\"cus-list\">{customers.map(c => <CustomerCard key={c.id} customer={c} />)}</div>}\n            </div>\n        );\n    }\n\n    public componentWillUnmount(): void {\n        this.isAlive = false;\n        this.unsubscribeCustomerList();\n    }\n}\n\nexport default CustomerList;","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport CustomerModel from \"../../../Models/CustomerModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./MyCustomerDetails.css\";\n\nfunction MyCustomerDetails(): JSX.Element {\n\n    const [customer, setCustomer] = useState(null);\n    const history = useHistory();\n    const [isAlive, setIsAlive] = useState(true);\n\n    useEffect(() => {\n        async function getCustomer() {\n            try {\n                const response = await jwtAxios.get<CustomerModel>(globals.urls.customer.details);\n                if (!isAlive) return;\n                setCustomer(response.data);\n                notify.success(\"Customer details were received!\");\n            } catch (err) {\n                notify.error(err);\n                if (err.response.data.status === 401) {\n                    history.push(\"/logout\");\n                }\n            }\n        };\n        getCustomer();\n\n        return (() => {\n            setIsAlive(false);\n        });\n    }, [history, isAlive]);\n\n    return (\n        <div className=\"MyCustomerDetails\">\n            {customer &&\n                <>\n                    <h2>My Details</h2>\n                    <h3>First name: {customer.firstName}</h3>\n                    <h3>Last name: {customer.lastName}</h3>\n                    <h4>Email: {customer.email}</h4>\n                    <h4>Password: {customer.password}</h4>\n                    <br /><br />\n                </>\n            }\n        </div>\n    );\n}\n\nexport default MyCustomerDetails;","import { Button, ButtonGroup, IconButton, InputAdornment, TextField, Typography } from \"@material-ui/core\";\nimport { ClearAll, Edit, Send, Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { ChangeEvent, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, useParams } from \"react-router\";\nimport CustomerModel from \"../../../Models/CustomerModel\";\nimport { customerUpdatedAction } from \"../../../Redux/CustomersState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/jwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./UpdateCustomer.css\";\n\ninterface AddCustomerState {\n    showPassword: boolean;\n}\n\nfunction UpdateCustomer(): JSX.Element {\n\n    const { register, handleSubmit, formState: { errors }, setValue } = useForm<CustomerModel>({\n        mode: \"all\"\n    });\n    const history = useHistory();\n    const [state, setState] = useState<AddCustomerState>({\n        showPassword: false\n    });\n\n    const handleClickShowPassword = () => {\n        setState({ ...state, showPassword: !state.showPassword });\n    };\n\n    const { id } = useParams<{ id: string }>();\n    const [customer] = useState(store.getState().customersState.customers.find(c => c.id === +id));\n    const customerInitial = { ...customer };\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target;\n        switch (name) {\n            case \"firstName\":\n                setValue(\"firstName\", value);\n                break;\n            case \"lastName\":\n                setValue(\"lastName\", value);\n                break;\n            case \"email\":\n                setValue(\"email\", value);\n                break;\n            case \"password\":\n                setValue(\"password\", value);\n                break;\n        }\n    }\n\n    useEffect(() => {\n        if (customer) {\n            setValue(\"id\", customer.id);\n            setValue(\"firstName\", customer.firstName);\n            setValue(\"lastName\", customer.lastName);\n            setValue(\"email\", customer.email);\n            setValue(\"password\", customer.password);\n        }\n    }, [customer, setValue]);\n\n    async function send(customer: CustomerModel) {\n        // check: if no changes performed => show a message to the user and do nothing\n        if (!isCustomerDifferent(customerInitial, customer)) {\n            notify.error(\"No changes were made!\");\n            return;\n        }\n\n        try {\n            const response = await jwtAxios.put<CustomerModel>(globals.urls.admin.customer, customer);\n            store.dispatch(customerUpdatedAction(response.data));\n            notify.success(\"The customer has been updated!\");\n            history.push(\"/customers\");\n        } catch (err) {\n            notify.error(err);\n            if (err.response.data.status === 401) { // UNAUTHORIZED or Token Expired\n                history.push(\"/logout\");\n            }\n        }\n    }\n\n    function isCustomerDifferent(customerBefore: CustomerModel, customer: CustomerModel) {\n        let isDiff: boolean = false;\n\n        // go over each entry of customer (after changes)\n        Object.entries(customer).forEach(afterEntry => {\n\n            // once isDiff is true => no need to check the rest of the entries\n            if (isDiff) return;\n\n            // get the same entry from the initial customer object and compare them\n            const beforeEntry = Object.entries(customerBefore).find(bEntry => afterEntry[0] === bEntry[0])\n\n            if (!(afterEntry.toString() === beforeEntry.toString())) {\n                isDiff = true;\n            }\n        });\n\n        return isDiff;\n    }\n\n    return (\n        <div className=\"UpdateCustomer\">\n            <Typography variant=\"h4\" className=\"Headline\"><Edit /> Update Customer</Typography>\n\n            <form onSubmit={handleSubmit(send)}>\n                <TextField label=\"FirstName\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"firstName\", {\n                        required: { value: true, message: \"Missing first name.\" },\n                        minLength: { value: 3, message: \"First name too short.\" },\n                        pattern: { value: /[^\\W ]/g, message: \"Use only alphanumeric, underscore and space characters.\" }\n                    })}\n                    defaultValue={customer?.firstName}\n                    inputProps={{ onChange: handleChange }}\n                    error={!!errors.firstName}\n                    helperText={errors.firstName?.message}\n                /><br /><br />\n\n                <TextField label=\"LastName\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"lastName\", {\n                        required: { value: true, message: \"Missing last name.\" },\n                        minLength: { value: 3, message: \"Last name too short.\" },\n                        pattern: { value: /[^\\W ]/g, message: \"Use only alphanumeric, underscore and space characters.\" }\n                    })}\n                    defaultValue={customer?.lastName}\n                    inputProps={{ onChange: handleChange }}\n                    error={!!errors.lastName}\n                    helperText={errors.lastName?.message}\n                /><br /><br />\n\n                <TextField label=\"Email\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"email\", {\n                        required: { value: true, message: \"Missing email.\" },\n                        pattern: { value: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/, message: \"Email is not valid.\" }\n                    })}\n                    defaultValue={customer?.email}\n                    inputProps={{ onChange: handleChange }}\n                    error={!!errors.email}\n                    helperText={errors.email?.message}\n                /><br /><br />\n\n                <TextField label=\"Password\" variant=\"outlined\" className=\"mui-input\"\n                    {...register(\"password\", {\n                        required: { value: true, message: \"Missing password.\" },\n                        minLength: { value: 4, message: \"Password too short, should be at least 4 characters.\" },\n                        pattern: { value: /^[a-zA-Z0-9]+$/gi, message: \"Use only the following characters: [a-zA-Z0-9].\" }\n                    })}\n                    defaultValue={customer?.password}\n                    type={state.showPassword ? 'text' : 'password'}\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                <IconButton aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword} edge=\"end\">\n                                    {state.showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>,\n                        onChange: handleChange\n                    }}\n                    error={!!errors.password}\n                    helperText={errors.password?.message}\n                /><br /><br />\n\n                <ButtonGroup variant=\"contained\">\n                    <Button className=\"send\" startIcon={<Send />}\n                        type=\"submit\">Update</Button>\n                    <Button className=\"reset\" startIcon={<ClearAll />}\n                        type=\"reset\">Reset</Button>\n                </ButtonGroup>\n            </form>\n        </div>\n    );\n}\n\nexport default UpdateCustomer;","import \"./SiteInfo.css\";\n\nfunction SiteInfo(): JSX.Element {\n    return (\n        <div className=\"SiteInfo\">\n            <h4>Welcome to</h4>\n\t\t\t<h2>Coupons System</h2>\n            <p>\n                When logged in as an <span>Administrator</span> you will be able to \n                create, update, delete and view companies and customers.\n            </p>\n            <p>\n                When logged in as a <span>Company</span> you will be able to \n                create, update, delete and view coupons.\n            </p>\n            <p>\n                When logged in as a <span>Customer</span> you will be able to \n                purchase and view coupons.\n            </p>\n            <h4>in a <span>simple</span> and <span>easy</span> way.</h4>\n        </div>\n    );\n}\n\nexport default SiteInfo;","import SiteInfo from \"../SiteInfo/SiteInfo\";\nimport \"./Home.css\";\n\nfunction Home(): JSX.Element {\n    return (\n        <div className=\"Home\">\n            <SiteInfo />\n        </div>\n    );\n}\n\nexport default Home;\n","import \"./Page404.css\";\n\nfunction Page404(): JSX.Element {\n    return (\n        <div className=\"Page404\">\n            <h4>404 page not found!</h4>\n\t\t\t<p>\n                <span></span><br /><br />\n                Terribly sorry...<br />\n                The page you are looking for does not exist.\n            </p>\n\n            <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/t3otBjVZzT0?autoplay=1\" allow=\"autoplay\" title=\"Page not Found\"></iframe>\n            {/* A small gesture for you, Assaf Finkelshtein :) */}\n        </div>\n    );\n}\n\nexport default Page404;","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport AboutUs from \"../../AboutArea/AboutUs/AboutUs\";\nimport AdminRequired from \"../../AuthArea/AdminRequired/AdminRequired\";\nimport CompanyRequired from \"../../AuthArea/CompanyRequired/CompanyRequired\";\nimport CustomerRequired from \"../../AuthArea/CustomerRequired/CustomerRequired\";\nimport Login from \"../../AuthArea/Login/Login\";\nimport Logout from \"../../AuthArea/Logout/Logout\";\nimport AddCompany from \"../../CompaniesArea/AddCompany/AddCompany\";\nimport CompanyDetails from \"../../CompaniesArea/CompanyDetails/CompanyDetails\";\nimport CompanyList from \"../../CompaniesArea/CompanyList/CompanyList\";\nimport MyCompanyDetails from \"../../CompaniesArea/MyCompanyDetails/MyCompanyDetails\";\nimport UpdateCompany from \"../../CompaniesArea/UpdateCompany/UpdateCompany\";\nimport ContactUs from \"../../ContactUsArea/ContactUs/ContactUs\";\nimport AddCoupon from \"../../CouponsArea/AddCoupon/AddCoupon\";\nimport CompanyCouponList from \"../../CouponsArea/CompanyCouponList/CompanyCouponList\";\nimport CouponDetails from \"../../CouponsArea/CouponDetails/CouponDetails\";\nimport CustomerCouponList from \"../../CouponsArea/CustomerCouponList/CustomerCouponList\";\nimport UpdateCoupon from \"../../CouponsArea/UpdateCoupon/UpdateCoupon\";\nimport AddCustomer from \"../../CustomersArea/AddCustomer/AddCustomer\";\nimport CustomerDetails from \"../../CustomersArea/CustomerDetails/CustomerDetails\";\nimport CustomerList from \"../../CustomersArea/CustomerList/CustomerList\";\nimport MyCustomerDetails from \"../../CustomersArea/MyCustomerDetails/MyCustomerDetails\";\nimport UpdateCustomer from \"../../CustomersArea/UpdateCustomer/UpdateCustomer\";\nimport Home from \"../../HomeArea/Home/Home\";\nimport Page404 from \"../../SharedArea/Page404/Page404\";\n\nfunction Routing(): JSX.Element {\n    return (\n        <div className=\"Routing\">\n            <Switch>\n                <Route path=\"/home\" component={Home} exact />\n\n                {/* Company: */}\n                <Route path=\"/company\" component={CompanyRequired(MyCompanyDetails)} exact />\n                <Route path=\"/company/coupons/update/:id\" component={CompanyRequired(UpdateCoupon)} exact />\n                <Route path=\"/company/coupons/add\" component={CompanyRequired(AddCoupon)} exact />\n                <Route path=\"/company/coupons/:id\" component={CompanyRequired(CouponDetails)} exact />\n                <Route path=\"/company/coupons\" component={CompanyRequired(CompanyCouponList)} exact />\n\n                {/* Customer: */}\n                <Route path=\"/customer\" component={CustomerRequired(MyCustomerDetails)} exact />\n                <Route path=\"/customer/coupons/:id\" component={CustomerRequired(CouponDetails)} exact />\n                <Route path=\"/customer/coupons\" component={CustomerRequired(CustomerCouponList)} exact />\n\n                {/* Admin: */}\n                <Route path=\"/companies/update/:id\" component={AdminRequired(UpdateCompany)} exact />\n                <Route path=\"/companies/add\" component={AdminRequired(AddCompany)} exact />\n                <Route path=\"/companies/:id\" component={AdminRequired(CompanyDetails)} exact />\n                <Route path=\"/companies\" component={AdminRequired(CompanyList)} exact />\n\n                <Route path=\"/customers/update/:id\" component={AdminRequired(UpdateCustomer)} exact />\n                <Route path=\"/customers/add\" component={AdminRequired(AddCustomer)} exact />\n                <Route path=\"/customers/:id\" component={AdminRequired(CustomerDetails)} exact />\n                <Route path=\"/customers\" component={AdminRequired(CustomerList)} exact />\n\n                {/* All: */}\n                <Route path=\"/login\" component={Login} exact />\n                <Route path=\"/logout\" component={Logout} exact />\n                <Route path=\"/about\" component={AboutUs} exact />\n                <Route path=\"/contact-us\" component={ContactUs} exact />\n\n                <Redirect from=\"/\" to=\"/home\" exact />\n                <Route component={Page404} /> {/* Must Be Last! */}\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routing;","import { BrowserRouter } from \"react-router-dom\";\nimport Footer from \"../Footer/Footer\";\nimport Header from \"../Header/Header\";\nimport Menu from \"../Menu/Menu\";\nimport Routing from \"../Routing/Routing\";\nimport \"./Layout.css\";\n\nfunction Layout(): JSX.Element {\n    return (\n        <BrowserRouter>\n            <div className=\"Layout\">\n                <header>\n                    <Header />\n                </header>\n                <aside>\n                    <Menu />\n                </aside>\n                <main>\n                    <Routing />\n                </main>\n                <footer>\n                    <Footer />\n                </footer>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default Layout;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Layout from './Components/LayoutArea/Layout/Layout';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}